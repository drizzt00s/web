var utility = require('utlity.js');


exports.outbox = function(req, res){
	res.render("./msg/outbox.ejs",{"title":"发件箱"});
};

exports.sendMsg = function(req, res){
	var uid = req.query.uid;
	var client = utility.prepareDb();
	var queryString = "select account,falseName,isonline,age,marriageStatus,height," +
	  				  "education,address,monthincome,profile,avatar from d where personid='" + uid +"'";
	client.query(queryString, function(error, d){
		if(error){
			throw error;
		}
		//console.log(d);
		if(!(d[0].profile)){
			//无头像
			d[0].profile = utility.defaultProfile();
		} else {
			//有头像
			var profile = d[0].profile; //头像图片 没有路径
			var account = d[0].account;//昵称
			var returnProfile = utility.userProfile(account, profile);
			d[0].profile = returnProfile;
		}

		if(!(d[0].avatar)){
			//无上传图片
			d[0].avatar = 0;
		} else {
			//有上传图片
			var avatarsLength = utility.userAvatarLength(d[0].avatar);  
			d[0].avatar = avatarsLength;
		}
		
		res.render("./msg/sendMsg.ejs",{"title":"发件箱","data":d});
	});
};

exports.countNewMsg = function(req,res){
	var username = req.body.username;
	var queryString = "select msgAsyn from d where account='" + username + "'";
	var client = utility.prepareDb();
	client.query(queryString,function(error,d){
		if(error){
			throw error;
		}
		d = eval("(" + d[0]["msgAsyn"] + ")");  //解析msgAysn字段的格式
		if(d){
			d = d["con"]; //数组,元素是json
			var newMsgCounts = 0; //isTheMsgNew
			for(var i = 0;i < d.length; i++){
				if(d[i]["isTheMsgNew"] == 1){
					newMsgCounts++;
				}
			} 
			res.send({"newMsg":newMsgCounts});
			client.end();
		}
	});
};


exports.inbox = function(req,res){
	res.render("./msg/inbox.ejs",{"title":""});
};

exports.getMsgAsyn = function(req,res){
	//收件箱逻辑
	var getUsername = req.query.username;
	var queryString = "SELECT * FROM d WHERE account=" + "'"+ getUsername +"'";
	var client = utility.prepareDb();
	client.query(queryString,function(error,result){
		if(error){
			throw error;
		}
		var resultProcessed1 = result[0]["msgAsyn"];//string
		var resultProcessed2 = eval("("+resultProcessed1+")");//json
		res.json({dataServer:resultProcessed2});
	});
};





exports.msgsent = function(req,res){
	var client = utility.prepareDb();
	var getAjaxData = req.body;
	//虽然放在http体里面传来的数据是字符串，但是这里的返回值值还是给对象，是因为express已经帮忙处理了
	var getAjaxDataString = JSON.stringify(getAjaxData);//string
	var formWhom = getAjaxData["from"];//发件人帐号
	var whoSent = getAjaxData["fromFalseName"];//发件人昵称
	var dataBody = getAjaxData["data"];//消息体
	var dataTo = getAjaxData["to"];//对方昵称

	var dataToAccount = getAjaxData['toAccount'];//对方用户名

	var whenSent = getAjaxData["whenSent"];//时间
	var uid = getAjaxData['uid'];//发件人的uid
	var msgTag = getAjaxData['msgTag'];//信息tag 唯一
	var targetProfileUrl = getAjaxData['targetProfileUrl'];
	var msgTimestamp = getAjaxData['msgTimestamp'];
	var isMsgNew = getAjaxData['isTheMsgNew'];
	

	var queryString = "select profile from d where personid='" + uid +"'";
	client.query(queryString, function(error, d){
		if(error){
			throw error;
		}
		if((d[0].profile)){
			var profileWithoutPath = d[0]['profile'];//无路径的profile
			var profile = utility.userProfile(formWhom, profileWithoutPath);//有路径的完整profile
		} else {
			var profile = utility.defaultProfile();
		}
		//拿到发件人的头像profile
		var queryString = "SELECT * FROM d WHERE falseName=" + "'" + dataTo + "'";
		client.query(queryString,function(error,result){
			if(error){
				throw error;
			}
			var getMsgAsyn = result[0]["msgAsyn"];
			if(!getMsgAsyn){
				var storeMsgJson = {"con":[]};
				getAjaxData['profile'] = profile;
				//将头像profile整合到信息体内
				storeMsgJson['con'].push(getAjaxData);
				var storeMsgString = JSON.stringify(storeMsgJson);
				var queryString = "UPDATE d SET msgAsyn=" + "'" + storeMsgString + "'" + " WHERE falseName=" + "'" + dataTo + "'";
				client.query(queryString,function(error){
					if(error){
						throw error;
					}
					res.send("ok!");
				})
			}
			//msgAsyn字段中无值
			else{
				var currentMsgJson = result[0];
				var currentMsgString = currentMsgJson["msgAsyn"];
				var currentMsgStringToJson = eval('('+currentMsgString+')');

				getAjaxData['profile'] = profile;
				//将头像profile整合到信息体内
				currentMsgStringToJson['con'].push(getAjaxData);
				var finalMsgString = JSON.stringify(currentMsgStringToJson);
				var queryString = "UPDATE d SET msgAsyn=" + "'" + finalMsgString + "'" + " WHERE falseName=" + "'" + dataTo + "'";
				client.query(queryString,function(error){
					if(error){
						throw error;
					}
					res.send("ok!");
				})
			}
			//msgAsyn字段中有值
		});
		//进此函数先查询msgAsyn字段中有值还是无值
		var queryStringSentMsg = "insert into message (username,msgTag,targetProfile,sentmsg,msgTimestamp,towhom,selfProfile,selfFasleName,isMsgNew,toWhomAccount,time) values('" +
		                         formWhom + "'" + ","  + "'" + msgTag + "'" + "," + "'" + targetProfileUrl + "'" + "," + "'" + 
		                         dataBody + "'" + "," + "'" + msgTimestamp + "'" + "," + "'" + dataTo  + "'" + "," + 
		                         "'" + profile  + "'" + "," + "'" + whoSent  + "'" + "," + "'" + isMsgNew + "'" + "," +  "'" + dataToAccount + "'" + "," +
		                         "'" + whenSent + "')";

		console.log(queryStringSentMsg);

		client.query(queryStringSentMsg,function(e){
			if(e){
				throw e;
			}
			console.log('insert into table message ok! ');
		});
	});

	//必须先检查该用户的msgAsyn字段中有没有值
};






exports.returnAllSentMsg = function(req,res){
	var username = req.body.username;
	var client = utility.prepareDb();
	var queryString = "select * from message where username='" + username +"'";
	client.query(queryString, function(error, d){
		if(error){
			throw error;
		}
		console.log(d);
		res.send(d);
		client.end();
	});
};




exports.getAllSentMsg = function(req,res){
	var username = req.body.username;
	var msgTag = req.body.msgTag;
	var thisMsgTagRelated = [];

	var client = utility.prepareDb();

	var queryString = "select * from message where username='" + username +"'";
	client.query(queryString, function(error, d){
		if(error){
			throw error;
		}
	 	//console.log(d); //Array

	 	for(var i = 0; i < d.length; i++){
	 		if(d[i]['msgTag'] === msgTag){
	 			thisMsgTagRelated.push(d[i]);
	 		}
	 	}

	 	res.send(thisMsgTagRelated);
	 	client.end();
	});
};

exports.changeNewMsgToOld = function(req,res){
	var uid = req.body.uid;
    var msgTag = req.body.msgTag;
    var client = utility.prepareDb();
    var queryString = "select msgAsyn from d where personid='" + uid +"'";
    client.query(queryString, function(error, d){
        if(error){
            throw error;
        }
        var msgAsynJson = eval("("+ d[0].msgAsyn+")");//json
        msgAsynArray = msgAsynJson['con'];//array
        for(var i = 0; i < msgAsynArray.length; i++ ){
            if(msgAsynArray[i]['msgTag'] === msgTag){
                msgAsynArray[i]['isTheMsgNew'] = 0;
                break;

            }
        }
        msgAsynJson.con = msgAsynArray;
        var newMsgAsynStr = JSON.stringify(msgAsynJson);
        var queryString = "UPDATE d SET msgAsyn='" + newMsgAsynStr + "' WHERE personid='" + uid + "'";
        client.query(queryString, function(error, d){
            if(error){
                throw error
            }



            res.send({data:'ok'});
            client.end();




        });
    });
};








exports.replayMsgDetail = function(req,res){

};



exports.msgDetail = function(req,res){
	//var isMsgNew = req.query.isnew; 
	var uid = req.query.uid; //对方uid
	var cp_uid = req.query.cp_uid//己方uid
	var msgTag = req.query.tag;//消息标识 唯一
	var msgType = req.query.msgType //消息的类型 是初始消息还是回复
	var client = utility.prepareDb();

	var queryString = "select account from d where personid='" + uid +"'";
	client.query(queryString, function(error, results){
		if(error){
			throw error;
		}

		
		var targetAccount = results[0]['account'];//对方用户名
	
		var queryString = "select msgAsyn from d where personid='" + cp_uid +"'";
		client.query(queryString, function(error, d){
			if(error){
				throw error;
			}
			d = eval("(" + d[0]["msgAsyn"] + ")");  //解析msgAysn字段的格式
			if(d){
				var data = d['con'];

				if(msgType === 'init'){
					var msgFound = [];
					for(var i = 0 ; i < data.length; i++){
						if(msgTag === data[i].msgTag){
							msgFound.push(data[i]);
							break;
						}
					}
				} else if(msgType === 'replay'){
					var msgFound = [];
					for(var i = 0 ; i < data.length; i++){
						if(msgTag === data[i].msgTag && data[i]['msgType'] === 'init'){
							msgFound.push( data[i]);
						}
						if(msgTag === data[i].msgTag && data[i]['msgType'] === 'replay'){
							msgFound.push( data[i]);
						}
					}
				}
			}
			res.render("./msg/msgDetail.ejs",{"title":"聊天记录", 'targetAccount':targetAccount,'msgFound': JSON.stringify(msgFound)});
			client.end();
		});
	});
};


exports.outboxDetail = function(req,res){
	var msgTag = req.query.msgTag;
	var toWhomAccount = req.query.toWhomAccount;
	

	


	res.render("./msg/outboxDetail.ejs",{"title":"发件箱聊天记录"});
};

