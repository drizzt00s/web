var fs = require("fs");
var httpUrl = require("url");
var httpQueryString = require("querystring");
var http = require('http');
var crypto = require("crypto");
var user = require("moduleUser");
var im = require("imagemagick");
var utility = require('utlity.js');
var dbUtlity = require('dbUtlity.js');
//user is the reference of document moduleUse.js

/*工具函数*/
var cutLocation = require("stringTools");
//切割字符串，生成地址
/*工具函数*/


exports.landing = function(req, res){
	res.render("landing/landing.ejs",{"title":"landing"});
}

exports.home = function(req, res){
	res.render("home/home.ejs",{"title":"home"});
}



/* directive template */
exports.breadcrumb = function(req, res){
	fs.readFile("./views/dirViews/breadcrumb.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.spotlight = function(req, res){
	fs.readFile("./views/dirViews/spotlight.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.dirProfile = function(req, res){
	fs.readFile("./views/dirViews/profile.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.cpPreview = function(req, res){
	fs.readFile("./views/dirViews/cpPreview.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.mainSideMenu = function(req, res){
	fs.readFile("./views/dirViews/mainSideMenu.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.registerpanel = function(req, res){
	fs.readFile("./views/dirViews/registerAndLogin.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickHeight = function(req, res){
	fs.readFile("./views/dirViews/pickHeight.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickEducation = function(req, res){
	fs.readFile("./views/dirViews/pickEducation.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickIncome = function(req, res){
	fs.readFile("./views/dirViews/pickIncome.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickBirthday = function(req, res){
	fs.readFile("./views/dirViews/pickBirthday.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.onlineTalk = function(req, res){
	fs.readFile("./views/dirViews/onlineTalk.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

/* directive template */




/* angularstrap modal template */
exports.pickAddressPanel = function(req, res){
	fs.readFile("./views/modal/pickAddressPanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickCity = function(req, res){
	fs.readFile("./views/modal/pickCity.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickheightpanel = function(req, res){
	fs.readFile("./views/modal/pickHeightPanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};


exports.pickeducationpanel = function(req, res){
	fs.readFile("./views/modal/pickEducationPanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.pickincomepanel = function(req, res){
	fs.readFile("./views/modal/pickIncomePanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.selyearpanel = function(req, res){
	fs.readFile("./views/modal/selYearPanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.selmonthpanel = function(req, res){
	fs.readFile("./views/modal/selMonthPanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};

exports.seldaypanel = function(req, res){
	fs.readFile("./views/modal/selDayPanel.ejs",function(err, data){
		if(err){
			throw err;
		}
		res.writeHead(200, {'Content-type' : 'text/html'});
		res.end(data);
	});
};


/* angularstrap modal template */






function createHtml(length,type,minValue){
 if(type==1){
    var insertedHtml=[];
    insertedHtml.length=length;
    for(var i=0;i<length;i++){
        insertedHtml[i]=minValue;
        minValue++
    }
 }
    return insertedHtml;
}
var registerHtml1=createHtml(51,1,1950);
var registerHtml2=createHtml(61,1,140);
//for register
var registerHtml3=createHtml(81,1,40);
//for edit
var registerHtml4=["鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪"];
var registerHtml5=["白羊座", "金牛座", "双子座", "巨蟹座", "狮子座", "处女座" ,"天秤座", "天蝎座" ,"射手座", "摩羯座", "水瓶座"," 双鱼座"];
var registerHtml6=["请选择","销售","客户服务","计算机/互联网","通信/电子","生产/制造","物流/仓储","商贸/采购","人事/行政","高级管理","广告/市场","传媒/艺术","生物/制药","医疗/护理","金融/保险/银行","建筑/房地产","咨询/顾问","法律","财会/审计","教育/科研","服务业","交通运输","政府机构","军人/警察","农林牧渔","自由职业","在校学生","待业","其他职业"];
var searchCondition2=createHtml(82,1,18);
var searchCondition5=createHtml(121,1,140);
var searchCondition6=["不限","中专或以上","大专或以上","本科或以上","双学士","硕士或以上","博士","博士后"];
var searchCondition8=["不限","和家人同住","已经购房","租房","打算婚后购房","单位宿舍"];
var searchCondition9=["不限","1000元以下","1001-2000元","2001-3000元","3001-5000元","5001-8000元","9001-20000元","20001-50000元","50000元以上"];
var searchCondition10=["不限","和家人同住","已经购房","租房","打算婚后购房","单位宿舍"];
var searchCondition11=["不限","未婚","离异","丧偶","未婚或离异","未婚或丧偶","离异或丧偶"];//该字段未加
var searchCondition12=["不限","未购车","已购车"];
var searchCondition13=["不限","销售","客户服务","计算机/互联网","通信/电子","生产/制造","物流/仓储","商贸/采购","人事/行政","高级管理","广告/市场","传媒/艺术","生物/制药","医疗/护理","金融/保险/银行","建筑/房地产","咨询/顾问","法律","财会/审计","教育/科研","服务业","交通运输","政府机构","军人/警察","农林牧渔","自由职业","在校学生","待业","其他职业"];
var searchCondition14=["不限","无小孩","有小孩归自己","有小孩归对方"];//将用户编辑的数据改成和此一致
var searchCondition15=["不限","政府机关","事业单位","外企企业","世界500强","上市公司","国有企业","私营企业","私有企业"];//该字段未加
var searchCondition16=["不限","北京","上海","广州","深圳","重庆","天津","广东","江苏","浙江","四川","福建","山东","湖北","河北","山西","内蒙古","辽宁","吉林","黑龙江","安徽","江西","河南","湖南","广西","海南","贵州","海南","海南","海南","海南","海南","海南","海南","海南"];
var submitTimes=[];
//globals
/*======================================dependencies====================================*/
exports.search=function(req,res){
 var checkUsername=req.session.username;
 if(checkUsername&&checkUsername!=""){
     res.render("./search.ejs",{title:"爱情搜索",isLogin:true,searchCondition2:searchCondition2,searchCondition5:searchCondition5,searchCondition6:searchCondition6,searchCondition8:searchCondition8,searchCondition9:searchCondition9,
     searchCondition10:searchCondition10,searchCondition11:searchCondition11,searchCondition12:searchCondition12,searchCondition13:searchCondition13,
     searchCondition14:searchCondition14,searchCondition15:searchCondition15,searchCondition16:16});
 }
  else{
     res.render("./search.ejs",{title:"爱情搜索",isLogin:false,searchCondition2:searchCondition2,searchCondition5:searchCondition5,searchCondition6:searchCondition6});
 }
}


exports.layout = function(reg,res){
    res.render("./layout.ejs",{title:"misMatch"});
}

exports.indexPost = function(reg,res){
     var clientData=reg.param("ajaxData");
     var jsonClientData=eval("("+clientData+")");
     var acc=jsonClientData.Con.username;
     var pass=jsonClientData.Con.pass;
     var User=user.user;
     var userInstance=new User();
     userInstance.loginCheck(acc,pass,reg,res);
	 //loginCheck方法在module.js里
}

exports.index = function(reg,res){
   var isSignUp = reg.session.username;
   var falseName = reg.session.userFalseName;
   if(!falseName){
       var falseNameRandom = "游客"+(new Date().getTime());
       falseName=falseNameRandom;
   }
   var signUp=0;
   var userNameDetail = "";
   if(isSignUp &&isSignUp != ""){
       signUp = 1;
       userNameDetail=isSignUp;
   }
   console.log("111111");
   res.render("./index.ejs",{title:"home",title2:"mismatch!",accErrMsg:"",passwordErrMsg:"",isSignUp:signUp,userName:falseName});
};













//******************************************************************论坛*****************************************/




























exports.homePageHelp=function(req,res){
	var username=req.body.username;
	var client = utility.prepareDb();
	var queryString="select profile from d where account='"+username+"'";
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		if(r.length<=0){
			var profile="../uploads/pic/default/unknown.png";
			res.send(profile);
			return;
		}
		if(r[0]["profile"].length<1){
			var queryString="select avatar from d where account='"+username+"'";
			client.query(queryString,function(e,r){
				if(e){
					throw e;
				}
				var checkAvatar=r[0]["avatar"];
				if(typeof checkAvatar=="string"){
					checkAvatar=eval("("+checkAvatar+")");
					var emptyFlag=checkAvatar.con.length;
				}
				if(!checkAvatar||emptyFlag==0){
					var profile="../uploads/pic/default/unknown.png";
					res.send(profile);
					client.end();
				} else {
					//同时将profile字段更新为这张照片
					var profile=eval('('+r[0]["avatar"]+')');
					var userProfile=profile["con"][0];
					var queryString="update d set profile='"+userProfile+"'"+" where account='"+username+"'";
					client.query(queryString,function(e,d){
						if(e){
							throw e;
						}
						//用户没有设置头像 用第一张照片当作用户的头像
						if(!profile){
							profile="../uploads/pic/default/unknown.png";
							res.send(profile);
							client.end();
						} else {
							profile=profile["con"][0];
							res.send(profile);
							client.end();
						}     
					});  
				}
			});
		}
		else{
			//用户的profile字段里有设置过的头像,拿这张图片作为首页的头像
			var profile=r[0]["profile"];
			res.send(profile);
			client.end();
		}
	});
}




















exports.errorPage = function(res,req){
  req.render("./404.ejs",{
     title:"404"
  });
};



var v = 0;

exports.editProfile = function (req,res){
    var userCookie = req.cookies;
    var userName = userCookie.username;
    var username=req.query.user;
    if(username!=userName){
        res.redirect("../404.ejs");
        return false;
    }
    var client = utility.prepareDb();
    var queryString="select avatar from d where account='"+username+"'";		
    client.query(queryString,function(e,r){
        if(e){
            throw e;
        }
        //查出所有用户的图片
        var profileList=eval('('+r[0]["avatar"]+')');
        if(profileList){
            profileList=profileList["con"];
            res.render('editProfile.ejs',{title:'edit profile', profiles:JSON.stringify(profileList)});
            client.end();
        } else {
            var profile="/Users/wanmengj/pro/web/uploads/pic/default/unknown.png";
            res.render("editProfile.ejs",{
                title:"edit profile",
                profiles:profile
            });
            client.end();
        }
    });
}







exports.checkProfile=function(req,res){
      var username=req.body.username;
	  var client = utility.prepareDb();
	  var queryString="select profile from d where account='"+username+"'";
	  client.query(queryString,function(e,d){
	     if(e){
		   throw e;
		 }
	     var profile=d[0]["profile"];
		 if(!profile){
		   res.send(false);
		   client.end();
		 }
		 else{
		   res.send(profile);
		   client.end();
		 }
	  });
};









exports.checkSentMsgs=function(req,res){
   var username=req.body.username;
   var client = utility.prepareDb();
   var queryString="select msgAsyn from d";
   client.query(queryString,function(e,d){
      if(e){
	    throw e;
	  }
     var totalMsg=d;
	 var resTotal={};
	 resTotal["readMsg"]=[];
	 resTotal["unreadMsg"]=[];
	 for(var i=0;i<totalMsg.length;i++){
	     var checkMsg=totalMsg[i]["msgAsyn"];
		 if(typeof checkMsg==="string"){
		    checkMsg=eval("("+checkMsg+")");
			checkMsg=checkMsg["con"];
			if(checkMsg.length==0){
			  continue;
			}
             for(var z=0;z<checkMsg.length;z++){
			    var checkUser=checkMsg[z]["from"];
				if(checkUser==username){
				   var isMsgRead=checkMsg[z]["isTheMsgNew"];
				   if(isMsgRead==0){
				     var msgRead={};
				     msgRead["from"]=checkUser;
				     msgRead["fromFalseName"]=checkMsg[z]["fromFalseName"];
					 msgRead["data"]=checkMsg[z]["data"];
					 msgRead["to"]=checkMsg[z]["to"];
					 msgRead["whenSent"]=checkMsg[z]["whenSent"];
		             resTotal["readMsg"].push(msgRead);
				   }
				   else if(isMsgRead==1){
				     var msgUnread={};
				     msgUnread["from"]=checkUser;
				     msgUnread["fromFalseName"]=checkMsg[z]["fromFalseName"];
					 msgUnread["data"]=checkMsg[z]["data"];
					 msgUnread["to"]=checkMsg[z]["to"];
					 msgUnread["whenSent"]=checkMsg[z]["whenSent"];
					 resTotal["unreadMsg"].push(msgUnread);
				   }
				}
			 }//2nd loop
		 }
	 }//loop
	 
	 
	 
    res.send(resTotal);
	 //可以通过查询msgAsyn字段来获取用户的已发送消息，包括哪些是已经读的，哪些是没读的（通过数组中的isTheMsgNew判断)
   
   });
}



//获取以读消息的人物头像,主页对方已读消息使用
exports.fetchReadProfile=function(req,res){
     var checkType=req.body.checkType;
	 if(checkType=="read"){
	   var fetchProfile=req.body.fetchProfile;
	   var Profile="(";
	   for(var i=0;i<fetchProfile.length;i++){
	    var eachFalseName=fetchProfile[i];
		  if(i!=fetchProfile.length-1){
		    eachFalseName=eachFalseName+",";
		  }
		  Profile+=eachFalseName;
	 }
	Profile=Profile+")";
	var client = utility.prepareDb();
	var queryString="select profile from d where falseName in"+Profile;

	client.query(queryString,function(e,d){
	  if(e){
	    throw e;
	  }
	  var queryString="select account from d where falseName in"+Profile;
	  //通过昵称找到用户名因为前端显示的头像的url需要用到用户名
	  client.query(queryString,function(e,r){
	     if(e){
		   throw e;
		 }
	   var returnProfile=[];
	   for(var i=0;i<d.length;i++){
	     var whoseProfile=fetchProfile[i];
		 var profileName=d[i];
		 var ProfileUsername=r[i]
		 var contain={};
		 contain["whoseProfile"]=whoseProfile;
		 contain["profileName"]=profileName;
		 contain["ProfileUsername"]=ProfileUsername;
		 returnProfile.push(contain);
	   }
	   //console.log(returnProfile);
	   res.send(returnProfile);
	   client.end();
	  });
	});
   }
   else if(checkType=="unread"){
      var fetchProfile=req.body.fetchProfile;
      var Profile="(";
	  for(var i=0;i<fetchProfile.length;i++){
	    var eachFalseName=fetchProfile[i];
		  if(i!=fetchProfile.length-1){
		    eachFalseName=eachFalseName+",";
		  }
		  Profile+=eachFalseName;
	  }
	  Profile=Profile+")";
	  var client = utility.prepareDb();
	  var queryString="select profile from d where falseName in"+Profile;
	   //通过昵称找到用户名因为前端显示的头像的url需要用到用户名
	  client.query(queryString,function(e,d){
	  if(e){
	    throw e;
	  }
	  var queryString="select account from d where falseName in"+Profile;
	  //通过昵称找到用户名因为前端显示的头像的url需要用到用户名
	  client.query(queryString,function(e,r){
	     if(e){
		   throw e;
		 }
	   var returnProfile=[];
	   for(var i=0;i<d.length;i++){
	     var whoseProfile=fetchProfile[i];
		 var profileName=d[i];
		 var ProfileUsername=r[i]
		 var contain={};
		 contain["whoseProfile"]=whoseProfile;
		 contain["profileName"]=profileName;
		 contain["ProfileUsername"]=ProfileUsername;
		 returnProfile.push(contain);
	   }
	   //console.log(returnProfile);
	   res.send(returnProfile);
	   client.end();
	  });
	});
   }
   //else
}


exports.updateProfileLink=function(req,res){
  var fetchUsername=req.body.fetchUsername;
  var copy=fetchUsername;
  fetchUsername=fetchUsername["unread"];
  var fetchUsernameRead=copy["read"];
  var fetchUsernameString="(";
   for(var i=0;i<fetchUsername.length;i++){
	    var eachFalseName=fetchUsername[i];
		  if(i!=fetchUsername.length-1){
		    eachFalseName=eachFalseName+",";
		  }
		  fetchUsernameString+=eachFalseName;
	  }
    fetchUsernameString=fetchUsernameString+")";
	var fetchUsernameString2="(";
	for(var z=0;z<fetchUsernameRead.length;z++){
	    var eachFalseName2=fetchUsernameRead[z];
		  if(z!=fetchUsernameRead.length-1){
		    eachFalseName2=eachFalseName2+",";
		  }
		  fetchUsernameString2+=eachFalseName2;
	  }
    fetchUsernameString2=fetchUsernameString2+")";
    var queryString="select account from d where falseName in"+fetchUsernameString;
	var client = utility.prepareDb();
	client.query(queryString,function(e,d){
	  if(e){
	    throw e;
	  }
	  var store=[];
	  for(var i=0;i<fetchUsername.length;i++){
	     var storeEach={};
		 storeEach["falseName"]=fetchUsername[i];
		 storeEach["account"]=d[i];
	     store.push(storeEach);
	  }
	  queryString="select account from d where falseName in"+fetchUsernameString2;
	  client.query(queryString,function(e,d){
	     if(e){
		   throw e;
		 }
		 var store2=[];
		 for(var i=0;i<fetchUsernameRead.length;i++){
	     var storeEach={};
		 storeEach["falseName"]=fetchUsernameRead[i];
		 storeEach["account"]=d[i];
	     store2.push(storeEach);
	   }
	   var storeAll={};
	   storeAll["read"]=store2;
	   storeAll["unread"]=store;
	   res.send(storeAll);
	   client.end();
	  });
	});
};



/* match */
exports.autoWatch = function(req,res){
	var username=req.body.d;
    var queryString="select * from d where account='"+username+"'";
    var client=utility.prepareDb();
    client.query(queryString,function(e,r){
        if(e){
            throw e;
        }
        var falseName=r[0]["falseName"];
        var dataArray=[falseName];
        var columnArray=["watch"];
        var queryString = dbUtlity.createQueryString(dataArray,columnArray,2,"extra2");
        client.query(queryString,function(e,r){
        if(e){
            throw e;
        }
        var storeNew=[];
        for(var j=0;j<r.length;j++){
            storeNew.push(r[j]["username"]);
        }
        storeNew=utility.removeRedundant(storeNew);
        dbUtlity.recurQuery(storeNew,"d","account",res);
        });
    });
};

exports.dailyMatch = function(req,res){
	var username=req.session.username;
	var requestTime=req.body.d;
	var matchDetail="";
	//记录用户择偶条件的字符串；
	var queryString="select lastdailymatch from d where account='"+username+"'";
	var client=utility.prepareDb();
	client.query(queryString,function(e,d){
	if(e){
	throw e;
	}
	//找出lastdailymatch是什么
	var lastDailyMatch=d[0]["lastdailymatch"];
	if(!lastDailyMatch){
	//上一次返回每日速配的时间为null,说明这是第一次进行每日速配逻辑的查询
	queryString="select gender,matchCondtion from d where account='"+username+"'";
	client.query(queryString,function(error,data){
	if(error){
	throw error;
	}
	var isMatchCondtionEmpty=data[0]["matchCondtion"];
	if(isMatchCondtionEmpty.length!=0){
	var storeData=data;
	storeData= eval("("+storeData[0]["matchCondtion"]+")");
	var ageFrom=storeData["ageFrom"];
	var ageTo=storeData["ageTo"];
	var areaProvince=storeData["areaProvince"];
	var areaCity=storeData["areaCity"];
	var heightFrom=storeData["heightFrom"];
	var heightTo=storeData["heightTo"];
	var race=storeData["race"];
	var education=storeData["education"];
	var ifHasPic=storeData["ifHasPic"];
	var proofRanking=storeData["proofRanking"];
	var marriageStatus=storeData["storeMarriageStatus"];
	if(parseInt(ageFrom)==parseInt(ageTo)){
	var ageScope=ageFrom+"岁";
	}
	else{
	var ageScope=ageFrom+"-"+ageTo+"岁";
	}
	matchDetail+=ageScope+" , ";

	if(parseInt(heightFrom)==parseInt(heightTo)){
	var heightScope=heightFrom+"厘米";
	}
	else{
	var heightScope=heightFrom+"-"+heightTo+"厘米";
	}
	matchDetail+=heightScope+" , ";
	if(marriageStatus){
	matchDetail+= (marriageStatus.join())+" , ";
	}
	if(areaProvince!="任意"){
	if(areaCity=="任意"){
	var area=areaProvince+" , ";
	}
	else{
	var area=areaProvince+" "+areaCity+" , ";
	}
	matchDetail+=area;
	}
	if(race!="不限"){
	matchDetail+=(race+" , ");
	}
	if(education!="不限"){
	matchDetail+=(education+" , ");
	}
	if(ifHasPic!=0){
	matchDetail+="有照片";
	}
	if(matchDetail[matchDetail.length-1]==" "){
	matchDetail=matchDetail.substring(0,matchDetail.length-3);
	}
	//输出配偶条件的字符串结束
	var gender=data[0]["gender"];
	if(gender=="男"){
	var searchGender="女";
	} else if(gender=="女"){
	var searchGender="男";
	}
	data=eval("("+data[0]["matchCondtion"]+")");
	var ageFrom=data.ageFrom;
	var ageTo=data.ageTo;
	var area1=data.areaProvince;//province
	var area2=data.areaCity;//city
	//var area=area1+" "+area2;  用处是什么？
	var height1=data.heightFrom; 
	var height2=data.heightTo;
	var race=data.race;
	var education=data.education;
	var ifHasPic=data.ifHasPic;
	var marriageStatus=data.storeMarriageStatus;
	//var proofRanking=data.proofRanking; 暂时没考虑
	var queryString="select * from d where gender='"+searchGender+"'";
	if(ageFrom==ageTo){
	queryString=queryString+" and age="+ageFrom;
	} else {
	queryString=queryString+" and age between "+ageFrom+" and "+ageTo;
	}
	if(height1==height2){
	queryString=queryString+" and intHeight="+height1;
	} else {
	queryString=queryString+" and intHeight between "+height1+" and "+height2;
	}
	if(education!="不限"&&education=="小学及以上"){
	queryString=queryString+" and intEducation>=0";
	} else if (education!="不限"&&education=="初中及以上"){
	queryString=queryString+" and intEducation>=1";
	} else if (education!="不限"&&education=="高中及以上"){
	queryString=queryString+" and intEducation>=2";
	} else if (education!="不限"&&education=="大专及以上"){
	queryString=queryString+" and intEducation>=3";
	} else if (education!="不限"&&education=="本科及以上"){
	queryString=queryString+" and intEducation>=4";
	} else if (education!="不限"&&education=="硕士及以上"){
	queryString=queryString+" and intEducation>=5";
	} else if (education!="不限"&&education=="博士及以上"){
	queryString=queryString+" and intEducation=6";
	}
	if(race!="不限"){
	queryString=queryString+" and race='"+race+"'";
	}
	if(area1!="任意"){
	if(area2=="任意"){
	queryString=queryString+" and province like '"+area1+"%'";
	} else {
	queryString=queryString+" and province like '"+area1+" "+area2+"%'";
	}
	}
	if(marriageStatus){
	if(marriageStatus.length==1){
	var marriage="('"+marriageStatus.join()+"')";
	} else if (marriageStatus.length>1){
	var str="";
	for(var i=0;i<marriageStatus.length;i++){
	str+="'"+marriageStatus[i]+"'";
	if(i!=marriageStatus.length-1){
	str+=",";
	}
	}
	str="("+str;
	str=str+")";
	var marriage=str;
	}
	queryString=queryString+" and marriageStatus in "+marriage;
	}
	if(ifHasPic==1){
	queryString=queryString+" and avatar is not null";
	}
	client.query(queryString,function(e,r){
	if(e){
	throw e;
	}
	// console.log(r);
	if(r.length!=0){
	//找的到匹配对象
	var storeNew=[];
	for(var i=0;i<r.length;i++){
	var storeEach={};
	storeEach.age=r[i]["age"];
	storeEach.location=r[i]["pLocation"]+" "+r[i]["cLocation"];
	storeEach.height=r[i]["intHeight"];
	storeEach.username=r[i]["account"];
	storeEach.profile=r[i]["profile"];
	storeEach.falseName=r[i]["falseName"];
	storeNew.push(storeEach);           
	}
	var conditionStr={};
	conditionStr["conditionString"]=matchDetail;
	storeNew.push(conditionStr); //将用户的速配条件作为返回数组的最后一个元素项
	res.send(storeNew);
	var currentTime=(new Date()).getTime();
	queryString="update d set lastdailymatch='"+currentTime+"'"+" where account='"+username+"'";
	//将返回速配结果的服务器时间存入lastdailymatch字段
	client.query(queryString,function(e,d){
	if(e){
	throw e;
	}
	client.end();
	}); 
	} else if (r.length==0){
	//找不到匹配对象
	res.send("找不到匹配对象");
	client.end();
	}
	}); 
	} else {
	res.send("没设置速配条件");
	client.end();
	}
	}); 
	}
	else{
	//检查上一次每日速配的时间,如果和现在时间的间隔小于一天(或某个时间段),则不返回新结果
	var currentTime=(new Date()).getTime();
	//console.log(currentTime);
	//console.log(lastDailyMatch);
	//console.log(parseInt(currentTime)-parseInt(lastDailyMatch));
	if(currentTime-lastDailyMatch<10000){
	//43200000
	res.send("还没好");
	client.end();
	} else {
	queryString="select gender,matchCondtion from d where account='"+username+"'";
	client.query(queryString,function(error,data){
	if(error){
	throw error;
	}
	var isMatchCondtionEmpty=data[0]["matchCondtion"];  
	//isMatchCondtionEmpty 这个地方一定不为空
	var storeData=data;
	storeData= eval("("+storeData[0]["matchCondtion"]+")");
	var ageFrom=storeData["ageFrom"];
	var ageTo=storeData["ageTo"];
	var areaProvince=storeData["areaProvince"];
	var areaCity=storeData["areaCity"];
	var heightFrom=storeData["heightFrom"];
	var heightTo=storeData["heightTo"];
	var race=storeData["race"];
	var education=storeData["education"];
	var ifHasPic=storeData["ifHasPic"];
	var proofRanking=storeData["proofRanking"];
	var marriageStatus=storeData["storeMarriageStatus"];
	if(parseInt(ageFrom)==parseInt(ageTo)){
	var ageScope=ageFrom+"岁";
	} else {
	var ageScope=ageFrom+"-"+ageTo+"岁";
	}
	matchDetail+=ageScope+" , ";
	if(parseInt(heightFrom)==parseInt(heightTo)){
	var heightScope=heightFrom+"厘米";
	} else {
	var heightScope=heightFrom+"-"+heightTo+"厘米";
	}
	matchDetail+=heightScope+" , ";
	if(marriageStatus){
	matchDetail+= (marriageStatus.join())+" , ";
	}
	if(areaProvince!="任意"){
	if(areaCity=="任意"){
	var area=areaProvince+" , ";
	} else {
	var area=areaProvince+" "+areaCity+" , ";
	}
	matchDetail+=area;
	}
	if(race!="不限"){
	matchDetail+=(race+" , ");
	}
	if(education!="不限"){
	matchDetail+=(education+" , ");
	}
	if(ifHasPic!=0){
	matchDetail+="有照片";
	}
	if(matchDetail[matchDetail.length-1]==" "){
	matchDetail=matchDetail.substring(0,matchDetail.length-3);
	}
	//输出配偶条件的字符串结束

	var gender=data[0]["gender"];
	if(gender=="男"){
	var searchGender="女";
	} else if (gender=="女"){
	var searchGender="男";
	}
	data=eval("("+data[0]["matchCondtion"]+")");
	var ageFrom=data.ageFrom;
	var ageTo=data.ageTo;
	var area1=data.areaProvince;//province
	var area2=data.areaCity;//city
	//var area=area1+" "+area2;  用处是什么？
	var height1=data.heightFrom; 
	var height2=data.heightTo;
	var race=data.race;
	var education=data.education;
	var ifHasPic=data.ifHasPic;
	var marriageStatus=data.storeMarriageStatus;
	//var proofRanking=data.proofRanking; 暂时没考虑
	var queryString="select * from d where gender='"+searchGender+"'";
	if(ageFrom==ageTo){
	queryString=queryString+" and age="+ageFrom;
	} else {
	queryString=queryString+" and age between "+ageFrom+" and "+ageTo;
	}
	if(height1==height2){
	queryString=queryString+" and intHeight="+height1;
	} else {
	queryString=queryString+" and intHeight between "+height1+" and "+height2;
	}
	if(education!="不限"&&education=="小学及以上"){
	queryString=queryString+" and intEducation>=0";
	} else if (education!="不限"&&education=="初中及以上"){
	queryString=queryString+" and intEducation>=1";
	} else if (education!="不限"&&education=="高中及以上"){
	queryString=queryString+" and intEducation>=2";
	} else if (education!="不限"&&education=="大专及以上"){
	queryString=queryString+" and intEducation>=3";
	} else if (education!="不限"&&education=="本科及以上"){
	queryString=queryString+" and intEducation>=4";
	} else if (education!="不限"&&education=="硕士及以上"){
	queryString=queryString+" and intEducation>=5";
	} else if (education!="不限"&&education=="博士及以上"){
	queryString=queryString+" and intEducation=6";
	}
	if(race!="不限"){
	queryString=queryString+" and race='"+race+"'";
	}
	if(area1!="任意"){
	if(area2=="任意"){
	queryString=queryString+" and province like '"+area1+"%'";
	} else {
	queryString=queryString+" and province like '"+area1+" "+area2+"%'";
	}
	}
	if(marriageStatus){
	if(marriageStatus.length==1){
	var marriage="('"+marriageStatus.join()+"')";
	}else if(marriageStatus.length>1){
	var str="";
	for(var i=0;i<marriageStatus.length;i++){
	str+="'"+marriageStatus[i]+"'";
	if(i!=marriageStatus.length-1){
	str+=",";
	}
	}
	str="("+str;
	str=str+")";
	var marriage=str;
	}
	queryString=queryString+" and marriageStatus in "+marriage;
	}
	if(ifHasPic==1){
	queryString=queryString+" and avatar is not null";
	}
	client.query(queryString,function(e,r){
	if(e){
	throw e;
	}
	//console.log(r);
	if(r.length!=0){
	//找的到匹配对象
	var storeNew=[];
	for(var i=0;i<r.length;i++){
	var storeEach={};
	storeEach.age=r[i]["age"];
	storeEach.location=r[i]["pLocation"]+" "+r[i]["cLocation"];
	storeEach.height=r[i]["intHeight"];
	storeEach.username=r[i]["account"];
	storeEach.profile=r[i]["profile"];
	storeEach.falseName=r[i]["falseName"];
	storeNew.push(storeEach);
	}
	var conditionStr={};
	conditionStr["conditionString"]=matchDetail;
	storeNew.push(conditionStr); //将用户的速配条件作为返回数组的最后一个元素项
	res.send(storeNew);         
	var currentTime=(new Date()).getTime();
	queryString="update d set lastdailymatch='"+currentTime+"'"+" where account='"+username+"'";
	//将返回速配结果的服务器时间存入lastdailymatch字段
	client.query(queryString,function(e,d){
	if(e){
	throw e;
	}
	client.end();
	}); 
	} else if (r.length==0){
	//找不到匹配对象
	res.send("找不到匹配对象");
	client.end();
	}
	}); 
	}); 
	}
	}
	});
};

/* match */

/* search */

exports.getSearchTpl = function(req,res){
  res.render("advancedSearch.ejs",{"title":"高级搜索"});
};

exports.search = function(req,res){
    var data=req.body.d;
    var gender=data.gender;
    var ageFrom=data.ageFrom;
    var ageTo=data.ageTo;
    var area1=data.area1;
    var area2=data.area2;
    var area=area1+" "+area2;
    var height1=data.height1;
    var height2=data.height2;
    var education=data.education;
    var profession=data.profession; 
    var marrigeStatus=data.marrigeStatus;
    var ifHasChildren=data.ifHasChildren;
    var monthIncome=data.monthIncome;
    var housing=data.housing;
    var ifHasCar=data.ifHasCar;
    var race=data.race;
    var xz=data.xz;
    var sx=data.sx;
    var bloodType=data.bloodType;
    var ifSmoking=data.ifSmoking;
    var ifDrinking=data.ifdrinking;
    var ifHasPic=data.ifHasPic;
    //ifHasPic==0没照片ifHasPic==1有照片
    var queryString="select * from d where gender='"+gender+"'";
    if(ageFrom==ageTo){
        queryString=queryString+" and age="+ageFrom;
    }
    else{
         queryString=queryString+" and age between "+ageFrom+" and "+ageTo;
    }
    if(height1==height2){
        queryString=queryString+" and intHeight="+height1;
    }
    else{
        queryString=queryString+" and intHeight between "+height1+" and "+height2;
    }
    if(education!="不限"&&education=="小学及以上"){
        queryString=queryString+" and intEducation>=0";
    }
    else if(education!="不限"&&education=="初中及以上"){
        queryString=queryString+" and intEducation>=1";
    }
    else if(education!="不限"&&education=="高中及以上"){
        queryString=queryString+" and intEducation>=2";
    }
    else if(education!="不限"&&education=="大专及以上"){
        queryString=queryString+" and intEducation>=3";
    }
    else if(education!="不限"&&education=="本科及以上"){
        queryString=queryString+" and intEducation>=4";
    }
    else if(education!="不限"&&education=="硕士及以上"){
        queryString=queryString+" and intEducation>=5";
    }
    else if(education!="不限"&&education=="博士及以上"){
        queryString=queryString+" and intEducation=6";
    }
    if(marrigeStatus!="不限"){
        queryString=queryString+" and marriageStatus='"+marrigeStatus+"'";
    }
    if(monthIncome!="不限"){
        queryString=queryString+" and monthincome='"+monthIncome+"'";
    }
    if(housing!="不限"){
        queryString=queryString+" and housingcondition='"+housing+"'";
    }
    if(race!="不限"){
        queryString=queryString+" and race='"+race+"'";
    }
    if(xz!="不限"){
        queryString=queryString+" and sign='"+xz+"'";
    }
    if(sx!="不限"){
        queryString=queryString+" and horoscope='"+sx+"'";
    }

    if(bloodType!="不限"){
        queryString=queryString+" and bloodType='"+bloodType+"'";
    }
    if(ifSmoking!="不限"){
        queryString=queryString+" and ifSmoking='"+ifSmoking+"'";
    }
    if(ifDrinking!="不限"){
        queryString=queryString+" and ifDrinking='"+ifDrinking+"'";
    }
    if(area1!="任意"){
       if(area2=="任意"){
           queryString=queryString+" and province like '"+area1+"%'";
       }
        else{
           queryString=queryString+" and province like '"+area1+" "+area2+"%'";
       }
    }
     if(ifHasChildren!=="不限"){
      queryString=queryString+" and ifhaschildren='"+ifHasChildren+"'";
     }
     if(profession!=="不限"){
      queryString=queryString+" and jobinfo1='"+profession+"'";
     }
    if(ifHasPic==1){
      queryString=queryString+" and avatar is not null";
    }
    var data=req.query.check; //这个值的作用是什么?
    var Client =require("mysql").Client;
    var client =new Client();
    client.user="root";
    client.password="5611559w";
    client.query("USE user");
    client.query(queryString,function(e,r){
        if(e){
           throw e;
        }
        if(r.length>0){
            var storeAccountName=[];
          for(var i=0;i<r.length;i++){
          storeAccountName.push(r[i]["account"]);
        }
        if(storeAccountName.length==1){
          var accountStr="('"+storeAccountName.join()+"')";
        }
        else if(storeAccountName.length>1){
           var str="";
           for(var i=0;i<storeAccountName.length;i++){
               str+="'"+storeAccountName[i]+"'";
               if(i!=storeAccountName.length-1){
                 str+=",";
               }
           }
           str="("+str;
           str=str+")";
           var accountStr=str;
        }
        queryString="select level from credits where username in "+accountStr;
         // console.log(queryString);
        client.query(queryString,function(e,d){
          if(e){
            throw e;
          }
           //将level字段的值整合到从表d 查询出来的数组中
           for(var i=0;i<d.length;i++){
              var level=d[i]["level"];
              r[i]["level"]=level;
           }
            res.send(r);
        }); 
      }
        else{
            res.send(r);
        }
    });
};

exports.searchLove = function(req,res){
	var Client =require("mysql").Client;
	var client =new Client();
	client.user="root";
	client.password="5611559w";
	client.query("USE user");
	//准备数据库
	var isSimpleSearch=req.query.simpleSearch;
	//这个变量用于判断是否是复杂搜索,值为1表示简单搜索,值为0表示复杂搜索
	if(isSimpleSearch==1){
		var searchResult=null;
		var searchCondition=null;
		var searchGender=req.query.searchGender;
		if(searchGender=="女朋友"){
			searchGender="女性";
		} else {
			searchGender="男性";
		}
		var searchAge=req.query.searchAge1;
		var searchAge2=req.query.searchAge2;
		var searchAgeRange=searchAge+" "+"-"+" "+searchAge2+"岁";
		var searchLocation=req.query.searchLocation+req.query.searchLocation2;
		var pic="";
		var isPicRequired=req.query.hasPic;
		if(isPicRequired){
			pic="有照片";
		} else {
			pic="无照片";
		}
		//searchGender,searchAgeRange,searchLocation,pic这几个变量用于提示字符串供用户浏览,接下来还要几个变量供数据库查询使用,这
		//几个变量应该在searchGender,searchAgeRange,searchLocation,pic的基础上生成
		if(searchGender=="女性"){
			var searchGenderQuery="女";
		}else{
			var searchGenderQuery="男";
		}
		searchGenderQuery=searchGenderQuery;
		searchYearQuery1=(new Date().getFullYear())-searchAge;
		searchYearQuery2=(new Date().getFullYear())-searchAge2;
		//搜索目标的年龄必须大于等于searchYearQuery1且小于等于searchYearQuery2
		searchProvinceQuery=req.query.searchLocation;
		searchCityQuery=req.query.searchLocation2;
		var searchHasPictureQuery;
		if(pic=="有照片"){
			searchHasPictureQuery="not null";
		} else {
			searchHasPictureQuery="null";
		}
		var queryStringJson={
		searchGenderQuery:searchGenderQuery,
		searchYearQuery1:searchYearQuery1,
		searchYearQuery2:searchYearQuery2,
		searchProvinceQuery:searchProvinceQuery,
		searchCityQuery:searchCityQuery,
		searchHasPictureQuery:searchHasPictureQuery
		}
		var loverQuery = utility.searchLoverQuery(1,queryStringJson);
		client.query(loverQuery,function(error,result){
			if(error){
				throw error;
			}

			client.end();
			//搜索结果
			res.render("searchLove.ejs",{"title":"找","searchConditionGender":searchGender,"searchConditionAgeRange":searchAgeRange,
			"searchConditionLocation":searchLocation,"searchConditionIfHasPic":pic,"searchContents":JSON.stringify(result)});
		});
	}
	//if 
};


/* search */




/* payment */
exports.payemnt = function(req,res){
	res.render("displayRights.ejs",{"title":"特权"});
}

/* payment */
















/* cp */

exports.me = function(req,res){
    res.render("me.ejs",{title:"我的佳缘"});
};



exports.updateProfile=function(req, res){
	var profileUrl=req.body.profileUrl;
	var username=req.body.username;
	var client = utility.prepareDb();
	var queryString="update d set profile='"+profileUrl+"'"+"where account='"+username+"'";
	client.query(queryString, function(e,d){
		if(e){
			throw e;
		}
		res.send("ok");
		client.end();
	});
};

exports.deleteProfile=function(req, res){
	var username=req.body.username;
	var deletedPic=req.body.pic;
	var client = utility.prepareDb();
	var queryString="select profile from d where account='"+username+"'";
	client.query(queryString,function(e,d){
		if(e){
			throw e;
		}
		var profileInDb=d[0]["profile"];
		if(profileInDb==deletedPic){
			res.send({
				errorMsg:"不能删除作为头像的图片,或者重新设置新头像再删除这张图片"
			});
			client.end();
		} else { 
			deletedPic="./uploads/pic/"+username+"/"+deletedPic;
			fs.unlink(deletedPic,function(error){
				if(error){
					throw error;
				}
				//文件夹里删除成功
				// var client=utility.prepareDb();
				var queryString="select avatar from d where account='"+username+"'";
				client.query(queryString,function(e,d){
					if(e){
						throw e;
					}
					var avatar=eval('('+d[0]["avatar"]+')');
					avatar=avatar["con"];
					var deletedIndex=0;
					for(var i=0;i<avatar.length;i++){
						if(deletedPic.indexOf(avatar[i])!=-1){
							deletedIndex=i;
						}
					}
					avatar.splice(deletedIndex,1);
					var updatedAvatars={};
					updatedAvatars["con"]=avatar;
					updatedAvatars=JSON.stringify(updatedAvatars);
					var queryString="update d set avatar='"+updatedAvatars+"'"+"where account='"+username+"'";
					client.query(queryString,function(e){
						if(e){
							throw e;
						}
						if(avatar.length<=0){
							//用户avatar字段中无值,要在profile字段中将用户的profile字段设置成unknown.png
							var queryString="update d set profile='"+""+"'";
							client.query(queryString,function(e,r){
								if(e){
									throw e;
								}
								res.send({
								errorMsg:null
								});
								client.end();		 
							});
						} else {
							res.send({
								errorMsg:null
							});
							client.end();
						}
					});
				});
			})
		}
	});
};

exports.identitycard = function(req, res){
	var username=req.params.username;
	var pic=req.params.pic;
	res.sendfile("./uploads/proofPic/identitycard/"+username+"/"+pic);
};

exports.income = function(req ,res){
	var username=req.params.username;
	var pic=req.params.pic;
	res.sendfile("./uploads/proofPic/income/"+username+"/"+pic);
};

exports.housing = function(req, res){
	var username=req.params.username;
	var pic=req.params.pic;
	res.sendfile("./uploads/proofPic/housing/"+username+"/"+pic);
};

exports.drive = function(req, res){
    var username=req.params.username;
    var pic=req.params.pic;
    res.sendfile("./uploads/proofPic/drive/"+username+"/"+pic);
};

exports.gangao = function(req, res){
    var username=req.params.username;
    var pic=req.params.pic;
    res.sendfile("./uploads/proofPic/gangao/"+username+"/"+pic);
};
/* cp */







exports.logoff = function(req,res){
 var checkSession = req.session.username;//用户名,不是昵称
 if(checkSession && checkSession != ""){
     req.session.destroy();
    //销毁本次session
     res.clearCookie("username");
     res.clearCookie("falseName");
     res.clearCookie("uid");
     //清除cookie
     var client = utility.prepareDb();
     var queryString = "update d set isOnline=0 where account='"+checkSession+"'";
     client.query(queryString,function(e){
        if(e){
         throw e;
        }

       thisLoginFlag = 0;
     	//res.redirect("/home");
     	res.send({data:true});
       //注销的时候二步:1.req.session.destroy();2.将要删除的cookie名传给clearCookie
       submitTimes = [];
     });
 }
};
//注销

/* register */


/* check */
exports.getLastLoginTime = function(req,res){
    var checkWhoseLastLogin=req.body.d;
    var client=utility.prepareDb();
    var queryString="select lastLogin from d where falseName='"+checkWhoseLastLogin+"'";
    client.query(queryString,function(e,r){
      if(e){
        throw e;
      }
      var lastLoginTime=r[0]["lastLogin"];
      res.send(lastLoginTime);
      client.end();
    });
};

exports.addBlackList = function(req,res){
	var blackWhom=req.body.d.blackWhom;
	var whoBlacks=req.body.d.whoBlacks;
	var querySting = dbUtlity.createQueryString([whoBlacks],["username"],2,"blacklist");
	var client=utility.prepareDb();
	client.query(querySting,function(e,r){
		if(e){
			throw e;
		}
		if(r.length===0){
			var store=[];
			store.push(blackWhom);
			store=JSON.stringify(store);
			var dataArray=[store,whoBlacks];
			var column=["blacklist","username"];
			var queryString = dbUtlity.createQueryString(dataArray,column,1,"blacklist");
			client.query(queryString,function(e,r){
				if(e){
					throw e;
				}
				client.end();
				res.send("1");
			});
		} else {
			var result= eval("("+r[0]["blacklist"]+")");
			for(var i=0;i<result.length;i++){
				if(result[i]==blackWhom){
					//该人已经在黑名单中
					client.end();
					res.send(blackWhom+"已经在你的黑名单中");
					return false;
				}
			}
			result.push(blackWhom);
			result=JSON.stringify(result);
			var queryString="update blacklist set blacklist='"+result+"'"+"where username='"+whoBlacks+"'";
			client.query(queryString,function(e,r){
				if(e){
					throw e;
				}
				client.end();
				res.send("1");
			});
		}
	});
};

exports.expectOtherLogin = function(req,res){
	var expectWhomLogin=req.body.expectWhomLogin; //希望谁登录时提醒(昵称)
	var whoExpects=req.body.whoExpects; //谁希望(帐号)
	var client=utility.prepareDb();
	var queryString="select whoExpectYouLogin from d where falseName='"+expectWhomLogin+"'";
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		if(r.length!=0){ 
			var r=r[0]["whoExpectYouLogin"];
			if(r.length>0){
				var r=eval("("+r+")"); //array
				r.push(whoExpects);
				r=utility.removeRedundant(r);//清除重复的值
				r=JSON.stringify(r);
				queryString="update d set whoExpectYouLogin='"+r+"' where falseName='"+expectWhomLogin+"'";
				client.query(queryString,function(e,r){
					if(e){
						throw e;
					}
					res.send("1");
				});
			} else if (r.length==0){
				var r=[];
				r.push(whoExpects);
				r=JSON.stringify(r);
				queryString="update d set whoExpectYouLogin='"+r+"' where falseName='"+expectWhomLogin+"'";
				client.query(queryString,function(e,r){
					if(e){
						throw e;
					}
					res.send("1");
				});
			}
		}
	});
};

/* check */



/* forum */
exports.getForum = function(req, res){
    res.render("forumTalk.ejs",{"title":"白领交友","postImgWarning":"","postImgWarningFlag":"0"});
};

exports.forumPostImage = function(req, res){
  //发图片
  var postID=req.body.checkPostID;//贴子id
  var checkUser=req.body.checkAccount;//帐号
  checkUser=checkUser+"_"+postID;
  var PicCollection=req.files;//这是个json,json的键是每个input type='file'的name的值,每个键的值是该上传图片的具体信息，也是个json
  var storePics=[];
 for(var i in PicCollection){
    storePics.push(PicCollection[i]);
 }

  //暂时不进行图片大小检测
  if(imgSize>204800){
    //图片不能大于200kb
     res.render("whiteCollar.ejs",{"title":"白领交友","postImgWarning":"图片不能大于200kb","postImgWarningFlag":"1"});
  }

  var client = utility.prepareDb();
  var queryString="update post set hasPic='1' where postId='"+postID+"'";
  client.query(queryString,function(e,r){
    if(e){
     throw e
    }
    //修改postId字段为1
   var fs=require("fs");
   fs.exists("./web/uploads/postPic/"+checkUser,function(exists){
      if(exists){ 
      }
      else{
          fs.mkdir("./web/uploads/postPic/"+checkUser,0755,function(){
             for(var i2=0;i2<storePics.length;i2++){
             //将上传的图片转移到固定文件夹中
               var uploadedTempPath=storePics[i2].path;//图片临时路径
               var imgName=storePics[i2].name;//图片名
               var imgSize=storePics[i2].size;
               if(imgSize){
                 var newUploadPath="./web/uploads/postPic/"+checkUser+"/"+imgName;//图片被转移后的路径
               fs.renameSync(uploadedTempPath,newUploadPath);
               if(i2==(storePics.length)-1){
                 res.render("whiteCollar.ejs",{"title":"白领交友","postImgWarning":"","postImgWarningFlag":"0"});
                }  
               }
             }
        })
      }
   });
 });
};

exports.getForumImgsOnEntering = function(req, res){
    var postID = req.body.postID//Array
    if(postID){
        var storeAllPic=[];
        var fs=require("fs");
        for(var i=0;i<postID.length;i++){
            var storeEachImg={};
            var eachPostImg=fs.readdirSync("./uploads/postPic/"+postID[i]);
            var key=postID[i];//string
            storeEachImg[key]=eachPostImg;
            storeAllPic.push(storeEachImg);
        }
        res.send(storeAllPic);
    } 
};

exports.postDetail = function(req, res){
  //返回当前主贴和所有回复
        var pid=req.body.pid;
        var client=utility.prepareDb();
        var queryString="select * from post where id="+pid;
        client.query(queryString,function(error,r){
            if(error){
                throw error;
            }
            if(!(r[0]["reply"])){ 
                res.send(null);
                client.end();
            }
            else{
                var allReplies=JSON.parse(r[0]["reply"]); //array
                res.send(allReplies);
                client.end();
            }
        });
};

exports.getPostDetail = function(req, res){
    var pid=req.query.pid;
    var ifHasPic=req.query.pic;
    if(ifHasPic==1){
        //主贴带有图片
        var imgFlag=req.query.imgFlag;//主帖可能带有的图片所在的文件夹
        var imgFlagUrl="./web/uploads/postPic/"+imgFlag;  
        fs.readdir(imgFlagUrl,function(e,files){
            if(e){
                throw e;
            }
            if(files.length==1){
                var postImg="../uploads/postPic/"+imgFlag+"/"+files[0];
                var client=utility.prepareDb();
                var queryString="select * from `post` where id='"+pid+"'";//唯一
                client.query(queryString,function(error,r){
                    if(error){
                        throw error;
                    }
                    var contents=r[0]["contents"];
                    var postTitle=(contents.substring(0,12))+"...";//title of post
                    //var byWhom=r[0]["byWhom"];//不显示发帖人的帐号，显示昵称
                    var byWhomeFalseName=r[0]["falseName"];
                    var time=r[0]["time"];
                    res.render("postDetail.ejs",{"contents":contents,"byWhom":byWhomeFalseName,"title":"postTitle","time":time,"imgUrl":postImg,"multiPicFlag":"","imgFlag":""});
                    client.end();
                });
            } else {
                //files是个数组
                var storeImgName=files//array;
                var storeImgNameString=JSON.stringify(storeImgName);
                var client=utility.prepareDb();
                var queryString="select * from `post` where id='"+pid+"'";//唯一
                client.query(queryString,function(error,r){
                    if(error){
                        throw error;
                    }
                    var contents=r[0]["contents"];
                    var postTitle=(contents.substring(0,12))+"...";//title of post
                    //var byWhom=r[0]["byWhom"];//不显示发帖人的帐号，显示昵称
                    var byWhomeFalseName=r[0]["falseName"];
                    var time=r[0]["time"];
                    res.render("postDetail.ejs",{"contents":contents,"byWhom":byWhomeFalseName,"title":"postTitle","time":time,"imgUrl":"","multiPicFlag":storeImgNameString,"imgFlag":imgFlag});
                    client.end();
                });
            }
        });
    } else {
        //主贴没有图片
        var client=utility.prepareDb();
        var queryString="select * from `post` where id='"+pid+"'";//唯一
        client.query(queryString,function(error,r){
            if(error){
                throw error;
            }
            var contents=r[0]["contents"];
            var postTitle=(contents.substring(0,12))+"...";//title of post
            //var byWhom=r[0]["byWhom"];//不显示发帖人的帐号，显示昵称
            var byWhomeFalseName=r[0]["falseName"];
            var time=r[0]["time"];
            res.render("postDetail.ejs",{"contents":contents,"byWhom":byWhomeFalseName,"title":"postTitle","time":time,"imgUrl":"",multiPicFlag:"","imgFlag":""});
            client.end();
        });
    }
};

exports.replyPost = function(req, res){
    var replayContents=req.body.replayContents;
    var replayByWhom=req.body.replayByWhom;//帐号
    var replayByWhomFalseName=req.body.falseName//昵称
    var postId=req.body.id;
    var replayTime=req.body.time;
    var replyTimeAx=req.body.timeAx;
    var storeEachReply={};
    storeEachReply["w"]=replayByWhom;//replay by whom
    storeEachReply["f"]=replayByWhomFalseName//昵称
    storeEachReply["c"]=replayContents//replay contents
    storeEachReply["t"]=replayTime//replay time
    storeEachReply["tx"]=replyTimeAx//时间轴
    storeEachReply["subReply"]=false;//子回复
    //all values are ok here!
    var Client=require("mysql").Client;
    var client=new Client();
    client.user="root";
    client.password="5611559w";
    client.query("USE user");
    var queryString="select * from `post` where `id`="+postId;
    client.query(queryString,function(error,r){
        if(error){
            throw error;
        } 
        var currentReplay=r[0]["reply"];
        if(!currentReplay){
            //there are no replies for this post
            var storeAllReplies=[];
            storeAllReplies.push(storeEachReply);//array
            var storeAllRepliesString=JSON.stringify(storeAllReplies)//string
            var queryInert="update post set reply='"+storeAllRepliesString+"'"+"where id="+postId; 
            //This is important:to store an array or a json in db, it is needed that the array or json must be changed into a string first
            //use method JSON.stringify
            var Client=require("mysql").Client;
            var client=new Client();
            client.user="root";
            client.password="5611559w";
            client.query("USE user");
            client.query(queryInert,function(error,r){
                if(error){
                    throw error;
                }
                //store reply success here
                res.send("1");
                client.end();
            });
            //query1
            var queryString2="select * from sp where id='"+postId+"'";
            var client2=new Client();
            client2.user="root";
            client2.password="5611559w";
            client2.query("USE user");
            client2.query(queryString2,function(error,r){
                if(error){
                    throw error;
                }
                var currentSubRep=r[0]["subRep"];
                if(!currentSubRep){
                    //当前这个主贴没有子回复
                    var storeAllSubRep=[];
                    storeAllSubRep.push(replayContents);
                    var storeAllSubRepString=JSON.stringify(storeAllSubRep);
                    var queryString2="update sp set subRep='"+storeAllSubRepString+"'"+"where id='"+postId+"'";
                    client2.query(queryString2,function(e,r){
                        if(e){
                            throw e;
                        }
                    });
                } else {
                    //当前这个主贴有子回复
                    return false;
                }
            });
        } else {
            //这个帖子目前有回复
            var currentReplay=r[0]["reply"];
            var currentReplayArray=JSON.parse(currentReplay);
            currentReplayArray.push(storeEachReply);
            var currentReplayString=JSON.stringify(currentReplayArray);
            var Client=require("mysql").Client;
            var client=new Client();
            client.user="root";
            client.password="5611559w";
            client.query("USE user");
            var queryInert="update post set reply='"+currentReplayString+"'"+"where id="+postId;
            client.query(queryInert,function(error,r){
                if(error){
                    throw error;
                }
                //store reply success here
                res.send("1");
                client.end();
            });
            //逻辑1
            var queryString2="select * from sp where id='"+postId+"'";
            var client2=new Client();
            client2.user="root";
            client2.password="5611559w";
            client2.query("USE user");
            client2.query(queryString2,function(error,r){
                if(error){
                    throw error;
                }
                var currentSubRep=r[0]["subRep"];
                if(!currentSubRep){
                //当前这个主贴没有子回复
                    var storeAllSubRep=[];
                    storeAllSubRep.push(replayContents);
                    var storeAllSubRepString=JSON.stringify(storeAllSubRep);
                    var queryString2="update sp set subRep='"+storeAllSubRepString+"'"+"where id='"+postId+"'";
                    client2.query(queryString2,function(e,r){
                        if(e){
                            throw e;
                        }
                        res.send("1");
                        client.end(); 
                    });
                } else {
                    //当前这个主贴有子回复
                    var currentSubRepArray=JSON.parse(currentSubRep);
                    currentSubRepArray.push(replayContents);
                    var currentSubRepString=JSON.stringify(currentSubRepArray);
                    var queryString2="update sp set subRep='"+currentSubRepString+"'"+"where id='"+postId+"'";
                    client2.query(queryString2,function(e,r){
                        if(e){
                            throw e;
                        }
                        res.send("1"); 
                        client.end();  
                    });
                }
            });
            //回复子贴逻辑2
        }
    });
};

exports.submitPreviewPic = function(req, res){
    var submitText=JSON.parse(req.body.replyTextDetail);
    var postContents=req.body.postContents;
    var username=submitText["replayByWhom"];
    var url=submitText["url"];
    var time=submitText["timeAx"];
    //var replyContents=submitText["replayContents"];//主贴内容
    var pid=submitText["id"];
    var picStore=req.files;
    var picStoreString=JSON.stringify(picStore);
    for(var i2 in picStore){
        var size=picStore[i2]["size"];
        if(!size){
            continue;
        }
        var tepPicUrl=picStore[i2]["path"];//图片临时路径
        var submitPicName=picStore[i2].name;//图片名
        if(!(fs.existsSync("/Users/wanmengj/pro/web/uploads/subPostPic/" + username + "_" + time))){
            //文件夹不存在
            fs.mkdirSync("/Users/wanmengj/pro/web/uploads/subPostPic/" + username + "_" + time, 0755);
            fs.renameSync(tepPicUrl,"/Users/wanmengj/pro/web/uploads/subPostPic/"+username+"_"+time+"/"+submitPicName);  
        } else {
            fs.renameSync(tepPicUrl,"/Users/wanmengj/pro/web/uploads/subPostPic/"+username+"_"+time+"/"+submitPicName); 
        }
    }//for
    res.redirect(url)
};

exports.getReplyPics = function(req, res){
    var time=req.body.storeInfo; //储存每个回帖的数组
    var storeAllPics=[];
    for(var i=0;i<time.length;i++){
        var storeEach={};
        var postTime=time[i]["time"];
        var postBy=time[i]["by"];
        var imgFolderName=postBy+"_"+postTime;
        if(fs.existsSync("./web/uploads/subPostPic/"+imgFolderName)){
            var postPics=fs.readdirSync("./web/uploads/subPostPic/"+imgFolderName);
            storeEach["by"]=imgFolderName;
            storeEach["pic"]=postPics;
            storeAllPics.push(storeEach);
        } else {
            storeEach["by"]=imgFolderName;
            storeEach["pic"]=false;
            storeAllPics.push(storeEach);
        }
    }
    res.send(storeAllPics);
};

exports.displayPostPicPreview = function(req, res){
	var username=req.session.username;
	var pic=req.files.uploadedImg;
	var picName=pic.name;//图片名
	var temPicPath=pic.path;
	var newPicPath="./web/uploads/postPicPreview/"+username+"/"+picName;
	fs.mkdir("./web/uploads/postPicPreview/"+username,0755,function(){
		fs.rename(temPicPath,newPicPath,function(e){
			if(e){
				throw e;
			}
			//从临时文件夹将图片转移到"./web/uploads/postPicPreview/成功
			res.render("postPicPreview.ejs",{"title":"","picFlag":picName}); 
		});
	});
};

exports.savePost = function(req, res){
	var title=req.body.title;
	var contents=req.body.contents;
	var time=req.body.time;
	var byWhom=req.body.byWhom;
	var byWhomFalse=req.body.byWhomFalseName;
	var postId=req.body.postId;
	var Client=require("mysql").Client;
	var client=new Client();
	client.user="root";
	client.password="5611559w";
	client.query("USE user");
	//准备数据库
	var queryString="insert into `post`(`byWhom`,`time`,`title`,`contents`,`falseName`,`postId`) values('"+byWhom+"'"+","+"'"+time+"'"+","+"'"+title+"'"+","+"'"+contents+"'"+","+"'"+byWhomFalse+"'"+","+"'"+postId+"'"+")";
	client.query(queryString,function(error,result){
		if(error){
			throw error;
		}
		res.send("1");
		client.end();
	});
	//表sp:子回复的逻辑
	var queryString2="insert into sp (owner) values('"+byWhomFalse+"')";
	client.query(queryString2,function(error,result){
		if(error){
			throw error;
		}
		client.end();
	});
};

exports.displayAllPost = function(req, res){
	var Client=require("mysql").Client;
	var client=new Client();
	client.user="root";
	client.password="5611559w";
	client.query("USE user");
	var queryString="select * from `post`";
	client.query(queryString,function(error,result){
		if(error){
			throw error;
		}
		res.send(result);
		client.end();
	});
};

exports.replySubPost = function(req, res){
	var pid=req.body.pid;//唯一
	//能进到这边，也就是说能回复子回复(非楼主的话),说明pid这个值一定存在
	var replyToWhom=req.body.replyToWhom;
	var replayByWhom=req.body.replayByWhom;
	var falseName=req.body.falseName;
	var currentTime=req.body.currentTime;
	var postContents=req.body.postContents;
	var replyWhichSub=req.body.replyWhichSub;//唯一 回复哪个子回复
	var Client=require("mysql").Client;
	var client=new Client();
	client.user="root";
	client.password="5611559w";
	client.query("USE user");
	var queryString="select * from sp where id='"+pid+"'";
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		var currentSubRep=r[0]["subRep2"];//String
		if(!currentSubRep){
			//没有针对子回复的回复
			var storeFinalRep=[];
			var storeEachFinalRep={};
			storeEachFinalRep["replyWhichSub"]=replyWhichSub
			storeEachFinalRep["contents"]=postContents;
			storeEachFinalRep["by"]=falseName;
			storeEachFinalRep["time"]=currentTime;
			storeFinalRep.push(storeEachFinalRep);
			var storeFinalRepString=JSON.stringify(storeFinalRep);
			var queryString="update sp set subRep2='"+storeFinalRepString+"'"+"where id='"+pid+"'";
			client.query(queryString,function(e,r){
			if(e){
			throw e;
			}
			res.send("1");
			client.end();
			});
		} else {
			//有针对子回复的回复
			var currentSubRepArray=JSON.parse(currentSubRep);
			var storeEachFinalRep={};
			storeEachFinalRep["replyWhichSub"]=replyWhichSub
			storeEachFinalRep["contents"]=postContents;
			storeEachFinalRep["by"]=falseName;
			storeEachFinalRep["time"]=currentTime;
			currentSubRepArray.push(storeEachFinalRep);
			var currentSubRep=JSON.stringify(currentSubRepArray);
			var queryString="update sp set subRep2='"+currentSubRep+"'"+"where id='"+pid+"'";
			client.query(queryString,function(e,r){
				if(e){
					throw e;
				}
				res.send("1");
				client.end();
			});
		}
	});
};

exports.getFinalSubReps = function(req, res){
	var pid=req.query.Pid;
	var Client=require("mysql").Client;
	var client=new Client();
	client.user="root";
	client.password="5611559w";
	client.query("USE user");
	var queryString="select * from sp where id='"+pid+"'";
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		var finalReps=JSON.parse(r[0]["subRep2"])//Arrays
		res.send(finalReps);
		client.end();
	});
};

exports.returnIcons = function(req, res){
	var allUSer=req.body.allUser;//array
	var storePicUrl=[];
	var storeAccount=[];
	var client=utility.prepareDb();
	var queryString='select * from d';
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		for(var i=0;i<r.length;i++){
			var eachUser=r[i]["falseName"];
			for(var c=0;c<allUSer.length;c++){
				var eachUser2=allUSer[c];
				if(eachUser2==eachUser){
					var account=eval("("+r[i]["account"]+")");
					storeAccount.push(account);
					if(eval("("+r[i]["avatar"]+")")){
						var pic=(eval("("+r[i]["avatar"]+")"))["con"];
						var pic=pic[0];
						storePicUrl.push(pic);
					} else {
					var pic="unknown.png";
					storePicUrl.push(pic);
					}
				}
			}
		}
		res.send({"s":storePicUrl,"a":storeAccount});
		client.end();
	});
};

exports.replyPostOwnerIcon = function(req, res){
	var postOwner=req.body.postOwner;
	var client=utility.prepareDb();
	var queryString="select * from d where falseName='"+postOwner+"'";
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		var pic=(eval("("+r[0]["avatar"]+")"))["con"];
		var pic=pic[0];
		var account=eval("("+r[0]["account"]+")");
		res.send({"pic":pic,"account":account});
		client.end();
	});
};

exports.postPicPreview = function(req, res){
	res.render("postPicPreview.ejs",{"title":"","picFlag":""});
};

exports.whiteCollar = function(req, res){
	res.render("whiteCollar.ejs",{"title":"白领交友","postImgWarning":"","postImgWarningFlag":"0"});
}

/* forum */




































/* map */
exports.mapSearch = function(req,res){
    res.render("mapSearch.ejs",{"title":"地图搜索"});
};
/* map */



/* user */

exports.who_online = function(req,res){
	var whoIsOnline=req.body.d;
	if(whoIsOnline){
		var whoIsOnlineArray=JSON.parse(whoIsOnline);
		utility.loopQuery(whoIsOnlineArray,res);//json,包含目前在线用户的信息,但是不包含图片
	} else {
		throw new Error("没传值过来");
	}
};

exports.checkUserDetails = function(req,res){
    var data = req.query.check;
    var Client = require("mysql").Client;
    var client = new Client();
    client.user = "root";
    client.password = "5611559w";
    client.query("USE user");
    var queryString = "SELECT * FROM d WHERE account='" + data + "'";
    client.query(queryString,function(error,result){
        if(error){
            throw error;
        }
        delete result[0]['password'];
        var dataProcessed = JSON.stringify(result[0]);
        client.end();
       // res.render("./checkDetail.ejs",{storeData:dataProcessed,title:"查看详细"});
       res.render("./user/userDetail/userDetail.ejs",{storeData:dataProcessed,title:"查看详细"});
    });
};

exports.getMatchCondition = function(req,res){
    res.render("editMatchCondition.ejs",{"title":"修改速配条件"});
};

exports.editMatchCondition = function(req,res){
    var userName=req.body.d.username;
    var matchData=req.body.d.data;//json
    var storeData=[];
    for(var i in matchData){
        storeData.push(matchData[i]);
    }
    storeData.push(userName);
    var columnArray=["gender","ageFrom","ageTo","area1","area2","height1","height2","education","job","marrige","monthIncome","housing","race","xz","sx","bloodType","ifSmoking","ifDrinking","userName"];
    var client=utility.prepareDb();
    var queryString="select * from dd where username='"+userName+"'";
    client.query(queryString,function(e,r){
        if(e){
            throw e;
        }
        if(r.length!==0){
            var queryString = dbUtlity.createQueryString(storeData,columnArray,3,"dd");
            client.query(queryString,function(e,r){
                if(e){
                    throw e;
                }
                res.send("1"); 
            });
        }
        else{
            var queryString = dbUtlity.createQueryString(storeData,columnArray,1,"dd");
            client.query(queryString,function(e,r){
                if(e){
                    throw e;
                }
                res.send("1");
            });
        }
    });
};

exports.matchConditionPost=function(req,res){
	var data=req.body.d;
	var username = data["username"];
	data=JSON.stringify(data);
	console.log(data);
	var client=utility.prepareDb();
	var queryString = "update d set matchCondtion='" + data + "'" + "where account='" + username + "'";                              
	client.query(queryString,function(e,d){
		if(e){
			throw e;
		}
		res.send("保存完毕");
		client.end();
	});	
};


exports.fetchCondtion = function(req,res){
	//获取速配条件
	var username = req.body.username;
	var queryString = "select matchCondtion from d where account='" + username + "'";
	var client = utility.prepareDb();
	client.query(queryString,function(e,r){
		if(e){
			throw e;
		}
		console.log(r);
		res.send(r);
		client.end();
	});
};

exports.matchCondition = function(req,res){
    res.render("matchCondition.ejs",{title:"设置速配条件"});
};














exports.edit = function(req,res){
    var requestUrl=req.url;
    if(requestUrl.indexOf("edit1")!=-1){
        res.render("edit1.ejs",{title:"个人基本信息",editHtml1:registerHtml3,editHtml2:registerHtml4,editHtml3:registerHtml5});
    }
    else if(requestUrl.indexOf("edit2")!=-1){
        res.render("./edit2.ejs",{title:"生活状态"});
    }
    else if(requestUrl.indexOf("edit3")!=-1){
        res.render("./edit3.ejs",{title:"您的工作情况",editHtml4:registerHtml6});
    }
    else if(requestUrl.indexOf("edit4")!=-1){
        res.render("./edit4.ejs",{title:"编辑征婚资料-您喜欢些什么"});
    }
    else if(requestUrl.indexOf("edit5")!=-1){
        res.render("./edit5.ejs",{title:"编辑征婚资料-描述您的爱好"});
    }
    else if(requestUrl.indexOf("edit6")!=-1){
        res.render("./edit6.ejs",{title:"说说你的家庭"});
    }
    else if(requestUrl.indexOf("editBasic1")!=-1){
        var username=req.session.username;
        var Client =require("mysql").Client;
        var client =new Client();
        client.user="root";
        client.password="5611559w";
        client.query("USE user");
        //database ready
        var queryString="SELECT * FROM d WHERE account="+"'"+username+"'";
        client.query(queryString,function(error,result){
                 if(error){
                      throw error;
                 }
                //result 是数据库查询出的结果，是个数组
                var falseName=result[0].falseName;
                var mobile=result[0].mobile;
                var email=result[0].email;
                var province=result[0].province;
                var gender=result[0].gender;
                var birthday=result[0].birthday;
                var marriageStatus=result[0].marriageStatus;
                var education=result[0].education;
                var height=result[0].height;
                var birthPlaceInfo=result[0].birthplaceinfo;
                var birthPlaceInfoCity=result[0].birthplaceinfocity;
                var monthIncome=result[0].monthincome;
                var ifHasChildren=result[0].ifhaschildren;
                var housingCondition=result[0].housingcondition;
                res.render("editBasic1.ejs",{title:"基本注册信息",userFalseName:falseName,editMobile:mobile,editMail:email,editProvince:province,editGender:gender,editBirthday:birthday,editMarriageStatus:marriageStatus,editEducation:education,editHeight:height});
                client.end();
            }
        )
    }
	else if(requestUrl.indexOf("editPic")!=-1){
		submitTimes=[];
		res.render("./editPic.ejs",{title:"上传照片",isSubmitted:"false",picIndex:null,picUploadResult:null,picUploadFailureReason:null,picIndexB:null,picUploadResultB:null,picUploadFailureReasonB:null,picIndexC:null,picUploadResultC:null,picUploadFailureReasonC:null,picIndexD:null,picUploadResultD:null,picUploadFailureReasonD:null,remainingPic:null});
	}
    else if(requestUrl.indexOf("userPhotoes.ejs")!=-1){
        var user=req.session.username;
        res.render("userPhotoes.ejs",{title:"浏览您的照片",checkUser:user});
    }
};













exports.editPost=function(req,res){
    var requestUrl=req.url;
    if(requestUrl.indexOf("edit1")!=-1){
        var userAccount=req.session.username;
        // username must be required via session at first because you need to know which row should be edited in db query
        var whichPageEdited = 1;

        var name = req.body.myName;
        var weight = req.body.weight;
        var sign=req.body.sign;
        var horoscope=req.body.horoscope;
        var bloodType=req.body.bloodType;
        var race=req.body.race;
        var religion=req.body.religion;
        var selfIntri=req.body.selfIntri;
        //get data for edit
        var User=user.user;
        var newUser=new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,name,weight,sign,horoscope,bloodType,race,religion,selfIntri,null,null,null,null,null,null,null,null,null,null,null);
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("edit2")!=-1){
        var userAccount=req.session.username;
        var whichPageEdited=2;


     

        var ifSmoking=req.body.edit2a;
        var ifDrinking=req.body.edit2b;
        var ifHasCar=req.body.edit2c;
        var cooks=req.body.edit2d;
        var houseKeeping=req.body.edit2e;
        var saving=req.body.edit2f;
        var whenToMarrige=req.body.edit2g;
        var whenHasChild=req.body.edit2h;
        var liveWithParents=req.body.edit2i;
        var mainCosts=req.body.mainCost;
        var mainDateType=req.body.mainRecreation;
        if(mainCosts instanceof Array){
            mainCosts=mainCosts.join();
        }
        if(mainDateType instanceof Array){
            mainDateType=mainDateType.join();
        }
        var User=user.user;
        var newUser=new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,ifSmoking,ifDrinking,ifHasCar,cooks,houseKeeping,saving,whenToMarrige,whenHasChild,liveWithParents,mainCosts,mainDateType);
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("edit3")!=-1){
        var userAccount=req.session.username;
        var whichPageEdited=3;

        console.log(req.body);


        var jobInfo1=req.body.edit3a;  //职业类别选择1
        var jobInfo=req.body.edit3aSub;//职业类别选择2
        var jobOverview=req.body.edit3c; //工作情况介绍
        var companyInfo=req.body.edit3b; //公司类别
        var User=user.user;
        var newUser=new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,jobInfo1,jobInfo,jobOverview,companyInfo);
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("edit4")!=-1){
        var userAccount=req.session.username;
        var whichPageEdited=4;


        
        console.log(req.body);


        var eventLoved=req.body.sportsLoved1;
        var sportsLoved=req.body.sportsLoved2;
        var musicLoved=req.body.musicLoved;
        var movieLoved=req.body.movieLoved;
        var foodLoved=req.body.foodLoved;

        var locationLoved=req.body.placeLoved;
        var petLoved=req.body.petLoved;


        if(eventLoved instanceof Array){
            eventLoved=eventLoved.join();
        }
        if(sportsLoved instanceof Array){
            sportsLoved=sportsLoved.join();
        }
        if(musicLoved instanceof Array){
            musicLoved=musicLoved.join();
        }
        if(movieLoved instanceof Array){
            movieLoved=movieLoved.join();
        }
        if(foodLoved instanceof Array){
            foodLoved=foodLoved.join();
        }
        if(locationLoved instanceof Array){
            locationLoved=locationLoved.join();
        }
        if(petLoved instanceof Array){
            petLoved=petLoved.join();
        }

 

        var User=user.user;
        var newUser=new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,eventLoved,sportsLoved,musicLoved,movieLoved,foodLoved,locationLoved,petLoved);
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("edit5")!=-1){
        var userAccount=req.session.username;
        var whichPageEdited=5;


 


        var hobby=req.body.edit5a;
        var User=user.user;
        var newUser=new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,hobby);
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("edit6")!=-1){
        var userAccount=req.session.username;
        var whichPageEdited=6;


        console.log(req.body);


        var parentsStatus=req.body.editStep6a;
        var siblingsStatus=req.body.editStep6b;
        var birthPlaceInfo=req.body.birthPlaceProvince;
        var  liveWithParents2=req.body.editStep6d;
        var  talkAboutFamily=req.body.editStep6e;
        var birthPlaceInfoCity=req.body.birthPlaceCity;
        var User=user.user;
        var newUser=new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,parentsStatus,siblingsStatus,birthPlaceInfo,liveWithParents2,talkAboutFamily,birthPlaceInfoCity);
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("editBasic1") !=- 1){
        var userAccount = req.session.username;
        var whichPageEdited = "editBasic1";


       

        var editFalseName = req.body.editFalseName;
        var editMobile = req.body.editMobile;
        var editEmail = req.body.editMail;
        var editBirthPlaceInfo = req.body.birthPlaceProvince;
        var editBirthPlaceInfoCity = req.body.birthPlaceCity;
        //data for update
        var monthIncome = req.body.editIncome;
        var ifHasChild = req.body.editOffspring;
        var housingCondition = req.body.editHouse;
        //data for insert
        var User = user.user;
        var newUser = new User(userAccount);
        newUser.falseName = editFalseName;
        newUser.mobile = editMobile;
        newUser.email = editEmail;
        newUser.birthPlaceInfo = editBirthPlaceInfo;
        newUser.birthPlaceInfoCity = editBirthPlaceInfoCity;
        newUser.monthIncome = monthIncome;
        newUser.ifHasChildren = ifHasChild;
        newUser.housingCondition = housingCondition;
        newUser.editUser(req,res,whichPageEdited,userAccount);
    }
    else if(requestUrl.indexOf("editPic")!=-1){
    var checkSubmitTime = req.body.checkRefresh;
    submitTimes.push(checkSubmitTime);
    var lastSubmit = submitTimes[(submitTimes.length) - 1];
    var previousSubmit = submitTimes[(submitTimes.length) - 2];
    if(lastSubmit != previousSubmit){
    var picIndex;
    var picUploadResult;
    var picUploadFailureReason;
    var picIndex2;
    var picUploadResult2;
    var picUploadFailureReason2;
    var picIndex3;
    var picUploadResult3;
    var picUploadFailureReason3;
    var picIndex4;
    var picUploadResult4;
    var picUploadFailureReason4;
    //picIndex-picUploadFailureReason4的作用是，记录每次用户上传图片后，图片被处理的信息
    var remainingPic2;
    //remainingPic2标示了当前用户还能上传几张图片
    var userAccount=req.session.username;
    var whichPageEdited="editPic";
    var picUploadedTime=new Date().getTime();

    var uploadedPicName=req.files.uploadPic.name;
    if(uploadedPicName!=""){
        uploadedPicName=picUploadedTime+uploadedPicName;
    }
    var uploadedPicName2=req.files.uploadPic2.name;
    if(uploadedPicName2!=""){
        uploadedPicName2=picUploadedTime+uploadedPicName2;
    }
    var uploadedPicName3=req.files.uploadPic3.name;
    if(uploadedPicName3!=""){
        uploadedPicName3=picUploadedTime+uploadedPicName3;
    }
    var uploadedPicName4=req.files.uploadPic4.name;
    if(uploadedPicName4!=""){
        uploadedPicName4=picUploadedTime+uploadedPicName4;
    }
    //读出上传图片的文件名
    //通过bodyParser中间件获取上传图片在服务器的临时存储位置
    var userAvatarPath=userAccount;
    fs.exists("./web/uploads/pic/"+userAvatarPath,function(result){

    if(result){//检查服务器上是否有存储该用户的文件夹，如果没有就新建，如果有则直接插入图片
    if(uploadedPicName!=""){
        var newUploadPath="./web/uploads/pic/"+userAvatarPath+"/"+uploadedPicName;
        var uploadedTempPath=req.files.uploadPic.path;
        var uploadedPicSize=req.files.uploadPic.size;
        if(uploadedPicSize>512000){
            //图片过大,转到专门的页面告知用户上传失败
            picIndex=1;
            picUploadResult="图片上传失败";
            picUploadFailureReason="图片大小不能大于1mb";
        }
        else{
            picIndex=1;
            picUploadResult="图片上传成功!";
            picUploadFailureReason="";
            fs.rename(uploadedTempPath,newUploadPath,function(error){
            if(error){
                throw error;
            }
            fs.unlink(uploadedTempPath)
            //从临时文件夹中删除图片的临时文件
            });
        }
    }
    if(uploadedPicName2!=""){
        var newUploadPath2="./web/uploads/pic/"+userAvatarPath+"/"+uploadedPicName2;
        var uploadedTempPath2=req.files.uploadPic2.path;
        var uploadedPicSize2=req.files.uploadPic2.size;
        if(uploadedPicSize2>512000){
            picIndex2=2;
            picUploadResult2="图片上传失败";
            picUploadFailureReason2="图片大小不能大于1mb";
        } else {
            picIndex2=2;
            picUploadResult2="图片上传成功!";
            picUploadFailureReason2="";
            fs.rename(uploadedTempPath2,newUploadPath2,function(error){
                if(error){
                    throw error;
                }
                fs.unlink(uploadedTempPath2)
                //从临时文件夹中删除图片的临时文件
            });
        }
    }
    if(uploadedPicName3!=""){
        var newUploadPath3="./web/uploads/pic/"+userAvatarPath+"/"+uploadedPicName3;
        var uploadedTempPath3=req.files.uploadPic3.path;
        var uploadedPicSize3=req.files.uploadPic3.size;
        if(uploadedPicSize3>512000){
            picIndex3=3;
            picUploadResult3="图片上传失败";
            picUploadFailureReason3="图片大小不能大于1mb";
        } else {
            picIndex3=3;
            picUploadResult3="图片上传成功!";
            picUploadFailureReason3="";
            fs.rename(uploadedTempPath3,newUploadPath3,function(error){
                if(error){
                    throw error;
                }
                fs.unlink(uploadedTempPath3)
                //从临时文件夹中删除图片的临时文件
            });
        }

    }
    if(uploadedPicName4!=""){
        var newUploadPath4="./web/uploads/pic/"+userAvatarPath+"/"+uploadedPicName4;
        var uploadedTempPath4=req.files.uploadPic4.path;
        var uploadedPicSize4=req.files.uploadPic4.size;
        if(uploadedPicSize4>512000){
            picIndex4=4;
            picUploadResult4="图片上传失败";
            picUploadFailureReason4="图片大小不能大于1mb";
        } else {
            picIndex4=4;
            picUploadResult4="图片上传成功!";
            picUploadFailureReason4="";
            fs.rename(uploadedTempPath4,newUploadPath4,function(error){
                if(error){
                    throw error;
                }
                fs.unlink(uploadedTempPath4)
                //从临时文件夹中删除图片的临时文件
            });
        }

    }
    var Client =require("mysql").Client;
    var client =new Client();
    client.user="root";
    client.password="5611559w";
    client.query("USE user");
    var queryString="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
    //准备数据库
    client.query(queryString,function(error,result){
    if(error){
        throw error;
    }
    var checkIfPicExists=result[0].avatar;

    if(checkIfPicExists!="undefined"&&checkIfPicExists!=null){
    //有值
        var checkIfPicExistsJson=eval("("+checkIfPicExists+")");
        if(uploadedPicName!=""&&uploadedPicSize<=512000){
            checkIfPicExistsJson.con.push(uploadedPicName);
        }
        if(uploadedPicName2!=""&&uploadedPicSize2<=512000){
            checkIfPicExistsJson.con.push(uploadedPicName2);
        }
        if(uploadedPicName3!=""&&uploadedPicSize3<=512000){
            checkIfPicExistsJson.con.push(uploadedPicName3);
        }
        if(uploadedPicName4!=""&&uploadedPicSize4<=512000){
            checkIfPicExistsJson.con.push(uploadedPicName4);
        }
        var checkIfPicExistsJson2=JSON.stringify(checkIfPicExistsJson);
        var checkIfPicExistsJson3=checkIfPicExistsJson2.replace(/"/g,"'");
        var queryStringAddPic="UPDATE d SET avatar="+"\"" +checkIfPicExistsJson3+"\""+"WHERE account="+"'"+userAccount+"'";

        client.query(queryStringAddPic,function(error,result){
            if(error){
                throw error;
            } else {
            var queryRemainingPic="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
            client.query(queryRemainingPic,function(error,result){
                if(error){throw error;}
                var picObjectString=result[0].avatar;
                var picJson=eval("("+picObjectString+")");
                var picJsonLength=picJson["con"].length;
                remainingPic2=12-picJsonLength;

                //计算出目前该用户数据库中存有几张图片

                res.cookie("userRemainingPic2",remainingPic2,{ expires: new Date(Date.now()-900000)});
                client.end();

                res.render("./editPic.ejs",{title:"上传照片",isSubmitted:"true",
                    picIndex:picIndex,picUploadResult:picUploadResult,picUploadFailureReason:picUploadFailureReason,
                    picIndexB:picIndex2,picUploadResultB:picUploadResult2,picUploadFailureReasonB:picUploadFailureReason2,
                    picIndexC:picIndex3,picUploadResultC:picUploadResult3,picUploadFailureReasonC:picUploadFailureReason3,
                    picIndexD:picIndex4,picUploadResultD:picUploadResult4,picUploadFailureReasonD:picUploadFailureReason4,
                    remainingPic:remainingPic2
                });

            }
            )
        }
        })
    }
    else{
    //无值
    var storePic={};
    storePic.con=[];
    if(uploadedPicName!=""&&uploadedPicSize<=512000){
    storePic.con.push(uploadedPicName);
    }
    if(uploadedPicName2!=""&&uploadedPicSize2<=512000){
    storePic.con.push(uploadedPicName2);
    }
    if(uploadedPicName3!=""&&uploadedPicSize3<=512000){
    storePic.con.push(uploadedPicName3);
    }
    if(uploadedPicName4!=""&&uploadedPicSize4<=512000){
    storePic.con.push(uploadedPicName4);
    }
    var storePicProcessed=JSON.stringify(storePic);
    var storePicProcessed2=storePicProcessed.replace(/"/g,"'"); 
    var queryStringToAddPic="UPDATE d SET avatar="+"\"" +storePicProcessed2+"\""+"WHERE account="+"'"+userAccount+"'";
    client.query(queryStringToAddPic,function(error){
    if(error){
    throw error;
    }


    else{
    var queryRemainingPic="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
    client.query(queryRemainingPic,function(error,result){
    if(error){throw error;}
    var picObjectString=result[0].avatar;
    var picJson=eval("("+picObjectString+")");
    var picJsonLength=picJson["con"].length;
    remainingPic2=12-picJsonLength;
    res.cookie("userRemainingPic2",remainingPic2,{ expires: new Date(Date.now()-900000)});
    //计算出目前该用户数据库中存有几张图片
    client.end();

    res.render("./editPic.ejs",{title:"上传照片",isSubmitted:"true",
    picIndex:picIndex,picUploadResult:picUploadResult,picUploadFailureReason:picUploadFailureReason,
    picIndexB:picIndex2,picUploadResultB:picUploadResult2,picUploadFailureReasonB:picUploadFailureReason2,
    picIndexC:picIndex3,picUploadResultC:picUploadResult3,picUploadFailureReasonC:picUploadFailureReason3,
    picIndexD:picIndex4,picUploadResultD:picUploadResult4,picUploadFailureReasonD:picUploadFailureReason4,
    remainingPic:remainingPic2
    });

    })
    }
    }
    )}
    });
    }
    else{

    fs.mkdir("./uploads/pic/"+userAvatarPath,0755,function(e){
    //服务器上存储上传图片的文件夹和每次上传的文件名
    if(uploadedPicName!=""){
    var newUploadPath="./uploads/pic/"+userAvatarPath+"/"+uploadedPicName;
    var uploadedTempPath=req.files.uploadPic.path;
    var uploadedPicSize=req.files.uploadPic.size;
    if(uploadedPicSize>512000){
    picIndex=1;
    picUploadResult="图片上传失败";
    picUploadFailureReason="图片大小不能大于1mb";
    }
    else{
    picIndex=1;
    picUploadResult="图片上传成功!";
    picUploadFailureReason="";
    fs.rename(uploadedTempPath,newUploadPath,function(error){
    if(error){
    throw error;
    }
    fs.unlink(uploadedTempPath);
    //从临时文件夹中删除图片的临时文件
    });
    }

    }
    if(uploadedPicName2!=""){
    var newUploadPath2="./uploads/pic/"+userAvatarPath+"/"+uploadedPicName2;
    var uploadedTempPath2=req.files.uploadPic2.path;
    var uploadedPicSize2=req.files.uploadPic2.size;
    if(uploadedPicSize2>512000){
    picIndex2=2;
    picUploadResult2="图片上传失败!";
    picUploadFailureReason2="图片大小不能大于1mb";

    }
    else{
    picIndex2=2;
    picUploadResult2="图片上传成功!";
    picUploadFailureReason2="";
    fs.rename(uploadedTempPath2,newUploadPath2,function(error){
    if(error){

    throw error;
    }
    fs.unlink(uploadedTempPath2);
    //从临时文件夹中删除图片的临时文件
    });
    }

    }
    if(uploadedPicName3!=""){
    var newUploadPath3="./uploads/pic/"+userAvatarPath+"/"+uploadedPicName3;
    var uploadedTempPath3=req.files.uploadPic3.path;
    var uploadedPicSize3=req.files.uploadPic3.size;
    if(uploadedPicSize3>512000){
    picIndex3=3;
    picUploadResult3="图片上传失败!";
    picUploadFailureReason3="图片大小不能大于1mb";

    }
    else{
    picIndex3=3;
    picUploadResult3="图片上传成功!";
    picUploadFailureReason3="";
    fs.rename(uploadedTempPath3,newUploadPath3,function(error){
    if(error){
    throw error;
    }
    fs.unlink(uploadedTempPath3);
    //从临时文件夹中删除图片的临时文件
    });

    }

    }
    if(uploadedPicName4!=""){
    var newUploadPath4="./uploads/pic/"+userAvatarPath+"/"+uploadedPicName4;
    var uploadedTempPath4=req.files.uploadPic4.path;
    var uploadedPicSize4=req.files.uploadPic4.size;
    if(uploadedPicSize4>512000){
    picIndex4=4;
    picUploadResult4="图片上传失败!";
    picUploadFailureReason4="图片大小不能大于1mb";
    }
    else{
    picIndex4=4;
    picUploadResult4="图片上传成功!";
    picUploadFailureReason4="";
    fs.rename(uploadedTempPath4,newUploadPath4,function(error){
    if(error){
    throw error;
    }
    fs.unlink(uploadedTempPath4);
    //从临时文件夹中删除图片的临时文件
    });
    }
    }
    var Client =require("mysql").Client;
    var client =new Client();
    client.user="root";
    client.password="5611559w";
    client.query("USE user");
    var queryString="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
    //准备数据库
    client.query(queryString,function(error,result){
    if(error){
    throw error;
    }
    var checkIfPicExists=result[0].avatar;
    if(checkIfPicExists!="undefined"&&checkIfPicExists!=null){
    //有值
    var checkIfPicExistsJson=eval("("+checkIfPicExists+")");
    if(uploadedPicName!=""&&uploadedPicSize<=512000){
    checkIfPicExistsJson.con.push(uploadedPicName);
    }
    if(uploadedPicName2!=""&&uploadedPicSize2<=512000){
    checkIfPicExistsJson.con.push(uploadedPicName2);
    }
    if(uploadedPicName3!=""&&uploadedPicSize3<=512000){
    checkIfPicExistsJson.con.push(uploadedPicName3);
    }
    if(uploadedPicName4!=""&&uploadedPicSize4<=512000){
    checkIfPicExistsJson.con.push(uploadedPicName4);
    }
    var checkIfPicExistsJson2=JSON.stringify(checkIfPicExistsJson);
    var checkIfPicExistsJson3=checkIfPicExistsJson2.replace(/"/g,"'");
    var queryStringAddPic="UPDATE d SET avatar="+"\"" +checkIfPicExistsJson3+"\""+"WHERE account="+"'"+userAccount+"'";
    client.query(queryStringAddPic,function(error,result){
    if(error){
    throw error;
    }
    else{
    var queryRemainingPic="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
    client.query(queryRemainingPic,function(error,result){
    if(error){throw error;}
    var picObjectString=result[0].avatar;
    var picJson=eval("("+picObjectString+")");
    var picJsonLength=picJson["con"].length;
    remainingPic2=12-picJsonLength;
    //计算出目前该用户数据库中存有几张图片
    res.cookie("userRemainingPic2",remainingPic2,{ expires: new Date(Date.now()-900000)});
    client.end();
    res.render("./editPic.ejs",{title:"上传照片",isSubmitted:"true",
    picIndex:picIndex,picUploadResult:picUploadResult,picUploadFailureReason:picUploadFailureReason,
    picIndexB:picIndex2,picUploadResultB:picUploadResult2,picUploadFailureReasonB:picUploadFailureReason2,
    picIndexC:picIndex3,picUploadResultC:picUploadResult3,picUploadFailureReasonC:picUploadFailureReason3,
    picIndexD:picIndex4,picUploadResultD:picUploadResult4,picUploadFailureReasonD:picUploadFailureReason4,
    remainingPic:remainingPic2
    });

    }
    )
    }
    })
    }
    else{
    //无值
    var storePic={};
    storePic.con=[];
    if(uploadedPicName!=""&&uploadedPicSize<=512000){
    storePic.con.push(uploadedPicName);
    }
    if(uploadedPicName2!=""&&uploadedPicSize2<=512000){
    storePic.con.push(uploadedPicName2);
    }
    if(uploadedPicName3!=""&&uploadedPicSize3<=512000){
    storePic.con.push(uploadedPicName3);
    }
    if(uploadedPicName4!=""&&uploadedPicSize4<=512000){
    storePic.con.push(uploadedPicName4);
    }
    var storePicProcessed=JSON.stringify(storePic);
    var storePicProcessed2=storePicProcessed.replace(/"/g,"'");
    var queryStringToAddPic="UPDATE d SET avatar="+"\"" +storePicProcessed2+"\""+"WHERE account="+"'"+userAccount+"'";

    client.query(queryStringToAddPic,function(error){
    if(error){
    throw error;
    }
    else{
    var queryRemainingPic="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
    client.query(queryRemainingPic,function(error,result){
    if(error){throw error;}
    var picObjectString=result[0].avatar;
    var picJson=eval("("+picObjectString+")");
    var picJsonLength=picJson["con"].length;
    remainingPic2=12-picJsonLength;
    //计算出目前该用户数据库中存有几张图片
    res.cookie("userRemainingPic2",remainingPic2,{ expires: new Date(Date.now()-900000) });
    client.end();
    res.render("./editPic.ejs",{title:"上传照片",isSubmitted:"true",
    picIndex:picIndex,picUploadResult:picUploadResult,picUploadFailureReason:picUploadFailureReason,
    picIndexB:picIndex2,picUploadResultB:picUploadResult2,picUploadFailureReasonB:picUploadFailureReason2,
    picIndexC:picIndex3,picUploadResultC:picUploadResult3,picUploadFailureReasonC:picUploadFailureReason3,
    picIndexD:picIndex4,picUploadResultD:picUploadResult4,picUploadFailureReasonD:picUploadFailureReason4,
    remainingPic:remainingPic2
    });

    })
    }
    }
    )}
    });
    })
    }
    })
    }
    else{

    res.render("./editPic.ejs",{title:"上传照片",isSubmitted:"false",picIndex:null
    ,picUploadResult:null,picUploadFailureReason:null,picIndexB:null,picUploadResultB:null
    ,picUploadFailureReasonB:null,picIndexC:null,picUploadResultC:null,picUploadFailureReasonC:null,
    picIndexD:null,picUploadResultD:null,picUploadFailureReasonD:null,remainingPic:null});
    submitTimes=[];
    }
    }
}
//editPost 结束
//用户编辑

/* user */










































































































exports.ajaxQuery = function(req,res){
    var checkIsShowPic=req.query.isShowPic;//值:getMsg;这个值何用?
    var userAccount=req.session.username;
    var queryRemainingPic="SELECT * FROM d WHERE account="+"'"+userAccount+"'";
    var Client =require("mysql").Client;
    var client =new Client();
    client.user="root";
    client.password="5611559w";
    client.query("USE user");
    if(checkIsShowPic==1){
        client.query(queryRemainingPic,function(error,result){
               if(error){
                   throw error;
               }
            var picObjectString=result[0].avatar;
            var picJson=eval("("+picObjectString+")");
            var checkIfHasPic=picJson.con.length;
            if(checkIfHasPic==0){
               res.send("none");
               client.end();
            }
            else{
               res.json({userStoredPic:picObjectString});
               client.end();
            }
         })
    }
    else if(checkIsShowPic=="showAllUserPics"){
      //如果进这里的话，意味着需要查出所有的或者是特定条件的所有用户，所以不需要知道用户名
      //在主页中显示db中所有用户的信息
        var queryString="SELECT * FROM d";
        client.query(queryString,function(error,result){
                if(error){
                    throw error;
                }

                 res.json({allUserInfo:result});
            })

    }
    else if(checkIsShowPic=="getMsg"){
    //收件箱逻辑
     var getUsername=req.query.username;
     var queryString="SELECT * FROM d WHERE account="+"'"+getUsername+"'";
     client.query(queryString,function(error,result){
        if(error){
             throw error;
        }
         var resultProcessed1=result[0]["msgAsyn"];//string
         var resultProcessed2=eval("("+resultProcessed1+")");//json
         res.json({dataServer:resultProcessed2});
      });
    }
    else{
        client.query(queryRemainingPic,function(error,result){
            if(error){
                throw error;
            }
            var picObjectString=result[0].avatar;
            var picJson=eval("("+picObjectString+")");
            if(!picJson){
                allowedPicLength=12;
            }
            else{
                var picJsonLength=picJson["con"].length;
                var allowedPicLength=12-picJsonLength;
            }
            res.json({ remainingPic: allowedPicLength })
            client.end();
        })
    }
};




exports.registerPost = function(reg,res){
    var indentityCard=parseInt(reg.body.indentityCard);//int
    var postCode=parseInt(reg.body.postCode);//int
    var mobile=parseInt(reg.body.mobile);//int
    var phone=parseInt(reg.body.phone);//int
    var account=reg.body.username;//varchar
    var password=reg.body.password;//varchar
    var checkPassword=reg.body.checkPassword;//varchar
    //var province=reg.body.selectProvince;//varchar


    //var province=reg.body.selectProvince+" "+reg.body.selectProvinceCity;
    var address=reg.body.address;//varchar


    var falseName=reg.body.falseName;//varchar
    var marriageStatus=reg.body.marriageStatus;//varchar

    var gender=reg.body.gender;//varchar
    var email=reg.body.email;//varchar
    var trueName=reg.body.trueName;//varchar
    var personalWebsite=reg.body.personalWebsite;//varchar
    var education=reg.body.education;//varchar
    if(education=="小学"){
       var intEducation=0;
    }
    else if(education=="初中"){
       var intEducation=1;
    }
    else if(education=="高中"){
        var intEducation=2;
    }
    else if(education=="大专"){
        var intEducation=3;
    }
    else if(education=="本科"){
        var intEducation=4;
    }
    else if(education=="硕士"){
        var intEducation=5;
    }
    else if(education=="博士"){
        var intEducation=6;
    }
    var height=(reg.body.userHeight)+"公分";//varchar
    var intHeight=reg.body.userHeight;
    var birthday=reg.body.birthday;
    var birthdayProcessed=birthday[0]+"年"+birthday[1]+"月"+birthday[2]+"日";//varchar
    var birthYear=birthday[0];
    //这个变量用于直观的看出用户几岁,用于后面的数据库查询
    var age=new Date().getFullYear()-birthYear;
    //年龄
   // var provinceLocation=reg.body.selectProvince;
   // var cityLocation= (reg.body.selectProvinceCity.split(" "))[0];
    //provinceLocation用户所在省份,cityLocation用户所在城市
    var addressInfo=cutLocation.cutLocation(address[0]);
    var provinceLocation=addressInfo.provinceLocation;
    var cityLocation=addressInfo.cityLocation;
    var subCityLocation=addressInfo.subCityLocation;
    //这个二个变量用于后面的数据库查询
    //store client date
    
    var province=provinceLocation+" "+cityLocation+" "+subCityLocation;
    console.log(province);

    var User=user.user;
    var userInstance=new User(account,password,checkPassword,indentityCard,postCode,mobile,phone,province,falseName,marriageStatus,gender,
    email,trueName,personalWebsite,height,birthdayProcessed,education,address,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    birthYear,provinceLocation,cityLocation,age,intHeight,intEducation);
    //Class user instance
    var checkResult= userInstance.checkIfUserExist(reg,res); 
};







/************************************************************* remade*****************************/




