var utility = require('utlity.js');
var user = require("moduleUser");
var fs = require("fs");
var httpUrl = require("url");
var httpQueryString = require("querystring");
var http = require('http');
var crypto = require("crypto");
var im = require("imagemagick");
var dbUtlity = require('dbUtlity.js');
var Error = require('error.js');

exports.editBasic = function(req, res){
	res.render("edit/basic.ejs",{title:'', editAvatarErroMsg:'', tabIndex:1});
};

exports.basicInfo = function(req, res){
	var userAccount = req.session.username;
	var whichPageEdited = "editBasic1";
	var editFalseName = req.body.editFalseName;
	var editMobile = req.body.editMobile;
	var editEmail = req.body.editMail;
	var editBirthPlaceInfo = req.body.birthPlaceProvince;
	var editBirthPlaceInfoCity = req.body.birthPlaceCity;
	//data for update
	var monthIncome = req.body.editIncome;
	var ifHasChild = req.body.editOffspring;
	var housingCondition = req.body.editHouse;
	//data for insert
	var User = user.user;
	var newUser = new User(userAccount);
	newUser.falseName = editFalseName;
	newUser.mobile = editMobile;
	newUser.email = editEmail;
	newUser.birthPlaceInfo = editBirthPlaceInfo;
	newUser.birthPlaceInfoCity = editBirthPlaceInfoCity;
	newUser.monthIncome = monthIncome;
	newUser.ifHasChildren = ifHasChild;
	newUser.housingCondition = housingCondition;
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.edit1 = function(req, res){
	var userAccount = req.session.username;
	// username must be required via session at first because you need to know which row should be edited in db query
	var whichPageEdited = 1;
	var name = req.body.myName;
	var weight = req.body.weight;
	var sign = req.body.sign;
	var horoscope = req.body.horoscope;
	var bloodType = req.body.bloodType;
	var race = req.body.race;
	var religion = req.body.religion;
	var selfIntri = req.body.selfIntri;
	//get data for edit
	var User = user.user;
	var newUser = new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,name,weight,sign,horoscope,bloodType,race,religion,selfIntri,null,null,null,null,null,null,null,null,null,null,null);
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.edit2 = function(req, res){
	var userAccount = req.session.username;
	var whichPageEdited = 2;
	var ifSmoking = req.body.edit2a;
	var ifDrinking = req.body.edit2b;
	var ifHasCar = req.body.edit2c;
	var cooks = req.body.edit2d;
	var houseKeeping = req.body.edit2e;
	var saving = req.body.edit2f;
	var whenToMarrige = req.body.edit2g;
	var whenHasChild = req.body.edit2h;
	var liveWithParents = req.body.edit2i;
	var mainCosts = req.body.mainCost;
	var mainDateType = req.body.mainRecreation;
	if(mainCosts instanceof Array){
		mainCosts = mainCosts.join();
	}
	if(mainDateType instanceof Array){
		mainDateType = mainDateType.join();
	}
	var User = user.user;
	var newUser = new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,ifSmoking,ifDrinking,ifHasCar,cooks,houseKeeping,saving,whenToMarrige,whenHasChild,liveWithParents,mainCosts,mainDateType);
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.edit4 = function(req, res){
	var userAccount = req.session.username;
	var whichPageEdited = 4;
	var eventLoved = req.body.sportsLoved1;
	var sportsLoved = req.body.sportsLoved2;
	var musicLoved = req.body.musicLoved;
	var movieLoved = req.body.movieLoved;
	var foodLoved = req.body.foodLoved;
	var locationLoved = req.body.placeLoved;
	var petLoved = req.body.petLoved;

	if(eventLoved instanceof Array){
		eventLoved = eventLoved.join();
	}
	if(sportsLoved instanceof Array){
		sportsLoved = sportsLoved.join();
	}
	if(musicLoved instanceof Array){
		musicLoved = musicLoved.join();
	}
	if(movieLoved instanceof Array){
		movieLoved = movieLoved.join();
	}
	if(foodLoved instanceof Array){
		foodLoved = foodLoved.join();
	}
	if(locationLoved instanceof Array){
		locationLoved = locationLoved.join();
	}
	if(petLoved instanceof Array){
		petLoved = petLoved.join();
		console.log('joined:' + petLoved);
	}
	var User = user.user;
	var newUser = new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,eventLoved,sportsLoved,musicLoved,movieLoved,foodLoved,locationLoved,petLoved);
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.edit5 = function(req, res){
	var userAccount = req.session.username;
	var whichPageEdited = 5;
	var hobby = req.body.edit5a;
	var User = user.user;
	var newUser = new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,hobby);
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.edit6 = function(req, res){
	var userAccount = req.session.username;
	var whichPageEdited = 6;
	var parentsStatus = req.body.editStep6a;
	var siblingsStatus = req.body.editStep6b;
	var birthPlaceInfo = req.body.birthPlaceProvince;
	var  liveWithParents2  =req.body.editStep6d;
	var  talkAboutFamily = req.body.editStep6e;
	var birthPlaceInfoCity = req.body.birthPlaceCity;
	var User = user.user;
	var newUser = new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,parentsStatus,siblingsStatus,birthPlaceInfo,liveWithParents2,talkAboutFamily,birthPlaceInfoCity);
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.edit3 = function(req, res){
	var userAccount = req.session.username;
	var whichPageEdited = 3;
	var jobInfo1 = req.body.edit3a;  //职业类别选择1
	var jobInfo = req.body.edit3aSub;//职业类别选择2
	var jobOverview = req.body.edit3c; //工作情况介绍
	var companyInfo = req.body.edit3b; //公司类别
	var User = user.user;
	var newUser = new User(userAccount,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,jobInfo1,jobInfo,jobOverview,companyInfo);
	newUser.editUser(req,res,whichPageEdited,userAccount);
};

exports.editAvatar = function(req, res){
	var userAccount = req.session.username;
    var whichPageEdited = "editPic";
    var picUploadedTime = new Date().getTime();
    var avatarName = picUploadedTime + '_' + (req.files.uploadPic.name);
    //将图片名改成 时间戳 + 原有图片名
	var avatarTmpPath = req.files.uploadPic.path;
	var newAvatarPath = "./uploads/avatar/" + userAccount + "/" + avatarName;
	var avatarSize = req.files.uploadPic.size;

	if(avatarSize > 512000){
		//图片过大不处理
		res.render("edit/basic.ejs",{title:'', editAvatarErroMsg:Error.getErrorMsg('avatarTooLarge'), tabIndex:7});
		return false;
	}

	var client = utility.prepareDb();
    fs.exists("./uploads/avatar/" + userAccount, function(result){
    	if(result){
    		//用户的文件夹已经存在
			fs.rename(avatarTmpPath, newAvatarPath, function(error){
				if(error){
					throw error;
				}
				var queryString = "select avatar from d where account='" + userAccount +"'";
				console.log(queryString);
				client.query(queryString, function(error,d){
					if(error){
						throw error;
					}
					d = d[0]['avatar'];
					console.log(d); 
					console.log(typeof d);//string
					var currentStoredAvatars = eval("(" + d + ")");



					currentStoredAvatars.push(avatarName);



					currentStoredAvatars = JSON.stringify(currentStoredAvatars);
					currentStoredAvatars = currentStoredAvatars.replace(/"/g,"'");
					var queryString = "update d set avatar=" + "\"" + currentStoredAvatars + "\"" + "where account=" + "'" + userAccount + "'";
					client.query(queryString, function(error, d){
						if(error){
							throw error;
						}
						client.end();
						res.render("edit/basic.ejs",{title:'', editAvatarErroMsg:Error.getErrorMsg('avatarUploadSuccess'), tabIndex:7});
					});
				});
			});
    	} else {
			//用户的文件夹不存在,先创建该用户的文件夹
			fs.mkdir("./uploads/avatar/" + userAccount, 0755 , function(e){
				fs.rename(avatarTmpPath, newAvatarPath, function(error,d){
					if(error){
						throw error;
					}
				    var storePic = [];
				    storePic.push(avatarName);
				    storePic = JSON.stringify(storePic);
				    storePic = storePic.replace(/"/g,"'");
				    var queryString = "update d set avatar=" + "\"" + storePic + "\"" + "where account=" + "'"+userAccount + "'";
					client.query(queryString, function(error){
						if(error){
							throw error;
						}
						res.render("edit/basic.ejs",{title:'', editAvatarErroMsg:Error.getErrorMsg('avatarUploadSuccess'), tabIndex:7});
					});
				});
			});
    	}
    });
};


